
export type Question = {
  id: number;
  question: string;
  type: 'mcq' | 'subjective';
  options?: string[];
  answer: string;
  explanation?: string;
  difficulty: 'easy' | 'medium' | 'hard' | 'expert';
  testId: number;
};

export const questions: Record<string, Question[]> = {
  frontend: [
    // Test 1 (Easy - 5 questions: 3 MCQ, 2 Subjective)
    {
      id: 1,
      testId: 1,
      difficulty: 'easy',
      question: "What does HTML stand for?",
      type: 'mcq',
      options: ['HyperText Markup Language', 'High-Level Text Machine Language', 'Hyper-Transferable Markup Language', 'Home Tool Markup Language'],
      answer: 'HyperText Markup Language',
      explanation: 'HTML is the standard markup language for documents designed to be displayed in a web browser.'
    },
    {
      id: 2,
      testId: 1,
      difficulty: 'easy',
      question: "What is the correct CSS syntax for making all the <p> elements bold?",
      type: 'mcq',
      options: ['p {font-weight: bold;}', 'p {text-style: bold;}', '<p style="font-weight:bold;">', 'p {font-style: bold;}'],
      answer: 'p {font-weight: bold;}',
      explanation: 'The `font-weight` property is used to specify the weight or boldness of a font.'
    },
    {
      id: 3,
      testId: 1,
      difficulty: 'easy',
      question: "Which JavaScript keyword is used to declare a variable that can be reassigned?",
      type: 'mcq',
      options: ['const', 'let', 'var', 'All of the above'],
      answer: 'let',
      explanation: '`let` allows you to declare variables that are limited to the scope of a block statement, and can be reassigned. `var` is function-scoped. `const` cannot be reassigned.'
    },
    {
      id: 4,
      testId: 1,
      difficulty: 'easy',
      question: "What is the purpose of the `alt` attribute on an `<img>` tag?",
      type: 'subjective',
      answer: "The `alt` attribute provides alternative text for an image if it cannot be displayed. It's crucial for accessibility, allowing screen readers to describe the image to visually impaired users, and is also used by search engines.",
      explanation: "Good `alt` text is important for SEO and accessibility."
    },
    {
      id: 5,
      testId: 1,
      difficulty: 'easy',
      question: "What is the Box Model in CSS?",
      type: 'subjective',
      answer: "The CSS box model is a box that wraps around every HTML element. It consists of: content, padding, border, and margin. It defines how elements are sized and spaced.",
      explanation: "It's a foundational concept for layout and spacing on the web."
    },

    // Test 2 (Easy-Medium - 10 questions: 6 MCQ, 4 Subjective)
    {
      id: 6,
      testId: 2,
      difficulty: 'easy',
      question: "Which HTML tag is used to define an internal style sheet?",
      type: 'mcq',
      options: ['<script>', '<css>', '<style>', '<link>'],
      answer: '<style>',
      explanation: 'The `<style>` tag is used to embed CSS directly within an HTML document.'
    },
    {
      id: 7,
      testId: 2,
      difficulty: 'easy',
      question: "How do you select an element with id 'demo' in CSS?",
      type: 'mcq',
      options: ['.demo', '#demo', 'demo', '*demo'],
      answer: '#demo',
      explanation: "The '#' symbol is used in CSS to select elements by their ID."
    },
    {
      id: 8,
      testId: 2,
      difficulty: 'easy',
      question: "Which of these is NOT a valid JavaScript data type?",
      type: 'mcq',
      options: ['string', 'boolean', 'character', 'undefined'],
      answer: 'character',
      explanation: "JavaScript does not have a separate 'character' type. Single characters are handled as strings."
    },
     {
      id: 14,
      testId: 2,
      difficulty: 'medium',
      question: "Which of the following is a hook in React?",
      type: 'mcq',
      options: ['render()', 'useState()', 'componentDidMount()', 'constructor()'],
      answer: 'useState()',
      explanation: '`useState` is a React Hook that lets you add state to functional components. The others are part of class component lifecycle methods or syntax.'
    },
    {
      id: 15,
      testId: 2,
      difficulty: 'medium',
      question: "What is the Virtual DOM?",
      type: 'mcq',
      options: ['A direct copy of the HTML DOM', 'A JavaScript object representing the DOM', 'A browser feature for faster rendering', 'A type of shadow DOM'],
      answer: 'A JavaScript object representing the DOM',
      explanation: "The Virtual DOM (VDOM) is a programming concept where a virtual representation of a UI is kept in memory and synced with the 'real' DOM by libraries like React. This allows for efficient updates by batching changes and minimizing direct DOM manipulation."
    },
    {
      id: 12,
      testId: 2,
      difficulty: 'medium',
      question: "In the context of Flexbox, what does `justify-content` control?",
      type: 'mcq',
      options: ['Alignment along the cross axis', 'Alignment along the main axis', 'The spacing between flex lines', 'The size of the flex items'],
      answer: 'Alignment along the main axis',
      explanation: '`justify-content` defines how the browser distributes space between and around content items along the main-axis of a flex container.'
    },
    {
      id: 9,
      testId: 2,
      difficulty: 'medium',
      question: "What is the difference between `==` and `===` in JavaScript?",
      type: 'subjective',
      answer: "The `==` operator performs type coercion before comparison (loose equality), while the `===` operator (strict equality) checks for both value and type equality without coercion.",
      explanation: "It is generally recommended to use `===` to avoid unexpected bugs from type coercion."
    },
    {
      id: 10,
      testId: 2,
      difficulty: 'medium',
      question: "What is a 'closure' in JavaScript?",
      type: 'subjective',
      answer: "A closure is a function that has access to its outer function's scope even after the outer function has returned. It 'closes over' the variables from its lexical scope.",
      explanation: "Closures are a powerful and fundamental concept in JavaScript."
    },
    {
      id: 11,
      testId: 2,
      difficulty: 'medium',
      question: "What does the `position: relative;` property do in CSS?",
      type: 'subjective',
      answer: "It positions an element relative to its normal position. You can then use `top`, `right`, `bottom`, and `left` properties to offset it. It also creates a new stacking context for `absolute` positioned child elements.",
      explanation: "It's a key property for controlling layout."
    },
    {
      id: 13,
      testId: 2,
      difficulty: 'medium',
      question: "What is event bubbling?",
      type: 'subjective',
      answer: "Event bubbling is a type of event propagation where an event first triggers on the innermost target element, and then successively on its ancestors (parents) in the DOM tree until it reaches the root document object.",
      explanation: "Understanding event propagation (bubbling and capturing) is key for handling complex user interactions."
    },
    
    // Test 3 (Medium - 15 questions: 9 MCQ, 6 Subjective)
    { id: 19, testId: 3, difficulty: 'medium', question: "What is the purpose of `useEffect` in React?", type: 'mcq', options: ['To manage component state', 'To handle side effects', 'To render JSX', 'To pass props'], answer: 'To handle side effects' },
    { id: 22, testId: 3, difficulty: 'medium', question: "What are React Fragments?", type: 'mcq', options: ['A way to group a list of children without adding extra nodes to the DOM', 'A tool for debugging React components', 'A special type of React component', 'A lifecycle method'], answer: 'A way to group a list of children without adding extra nodes to the DOM' },
    { id: 26, testId: 3, difficulty: 'medium', question: "Which of the following is used for client-side routing in React?", type: 'mcq', options: ['Node.js', 'Express.js', 'React Router', 'Next.js'], answer: 'React Router' },
    { id: 30, testId: 3, difficulty: 'medium', question: "What is tree shaking in the context of JavaScript bundlers?", type: 'mcq', options: ['A debugging technique', 'A process to eliminate dead code', 'A way to visualize the component tree', 'A code formatting tool'], answer: 'A process to eliminate dead code' },
    { id: 102, testId: 3, difficulty: 'medium', question: "What is `JSON.stringify` and `JSON.parse`?", type: 'mcq', options: ['Functions for data encryption', 'Functions for converting between JSON strings and JavaScript objects', 'Functions for database queries', 'Functions for creating web components'], answer: 'Functions for converting between JSON strings and JavaScript objects' },
    { id: 71, testId: 3, difficulty: 'medium', question: "What is JSX?", type: 'mcq', options: ['A templating language for JavaScript', 'A syntax extension for JavaScript that looks like HTML', 'A CSS preprocessor', 'A database query language'], answer: 'A syntax extension for JavaScript that looks like HTML' },
    { id: 66, testId: 3, difficulty: 'medium', question: "What does the `...` spread syntax do in JavaScript?", type: 'mcq', options: ['It condenses an array into a single value', 'It expands an iterable (like an array or object) into individual elements', 'It is used for comments', 'It creates a new function'], answer: 'It expands an iterable (like an array or object) into individual elements' },
    { id: 45, testId: 3, difficulty: 'medium', question: "What is the `defer` attribute on a `<script>` tag?", type: 'mcq', options: ['It stops the script from executing', 'It executes the script asynchronously as soon as it is downloaded', 'It executes the script after the document has been parsed, but before `DOMContentLoaded`', 'It executes the script before any HTML is parsed'], answer: 'It executes the script after the document has been parsed, but before `DOMContentLoaded`' },
    { id: 41, testId: 3, difficulty: 'medium', question: "What is lazy loading in the context of web performance?", type: 'mcq', options: ['Loading all assets at once', 'Delaying the loading of non-critical resources until they are needed', 'A CSS loading strategy', 'A database query optimization'], answer: 'Delaying the loading of non-critical resources until they are needed' },
    { id: 16, testId: 3, difficulty: 'medium', question: "What is the `Promise.all()` method used for?", type: 'subjective', answer: "`Promise.all()` takes an iterable of promises and returns a single Promise that resolves when all of the promises in the iterable have resolved, or rejects with the reason of the first promise that rejects." },
    { id: 17, testId: 3, difficulty: 'medium', question: "What are CSS pseudo-classes?", type: 'subjective', answer: "A CSS pseudo-class is a keyword added to a selector that specifies a special state of the selected element(s). For example, `:hover`, `:focus`, `:first-child`." },
    { id: 18, testId: 3, difficulty: 'medium', question: "Explain the concept of 'hoisting' in JavaScript.", type: 'subjective', answer: "Hoisting is JavaScript's default behavior of moving declarations to the top of the current scope. `var` declarations are hoisted and initialized with `undefined`. `let` and `const` are hoisted but not initialized, which leads to a 'Temporal Dead Zone'." },
    { id: 20, testId: 3, difficulty: 'medium', question: "What is the difference between `null` and `undefined` in JavaScript?", type: 'subjective', answer: "`undefined` means a variable has been declared but has not yet been assigned a value. `null` is an assignment value, representing the intentional absence of any object value." },
    { id: 21, testId: 3, difficulty: 'medium', question: "How does CSS Grid Layout differ from Flexbox?", type: 'subjective', answer: "Flexbox is designed for one-dimensional layouts (a row or a column). CSS Grid is designed for two-dimensional layouts (rows and columns at the same time)." },
    { id: 23, testId: 3, difficulty: 'medium', question: "Explain the `async` and `await` keywords in JavaScript.", type: 'subjective', answer: "`async` functions allow the use of `await` to pause execution and wait for a promise to resolve or reject, making asynchronous code look and behave more like synchronous code." },

    // Test 4 (Medium - 20 questions: 12 MCQ, 8 Subjective)
    { id: 34, testId: 4, difficulty: 'medium', question: "What is a higher-order component (HOC) in React?", type: 'mcq', options: ['A component that renders other components', 'A function that takes a component and returns a new component with additional props or logic', 'A parent component in the component tree', 'Any component that uses hooks'], answer: 'A function that takes a component and returns a new component with additional props or logic' },
    { id: 37, testId: 4, difficulty: 'medium', question: "What is the `useReducer` hook?", type: 'mcq', options: ['An alternative to `useState` for complex state logic', 'A hook for reducing bundle size', 'A hook for performing animations', 'A hook for data fetching'], answer: 'An alternative to `useState` for complex state logic' },
    { id: 85, testId: 4, difficulty: 'medium', question: "Explain the different values for the `display` property in CSS.", type: 'mcq', options: ['block, inline, grid, flex', 'all of these', 'none of these', 'only block and inline'], answer: 'all of these' },
    { id: 56, testId: 4, difficulty: 'medium', question: "What is a `Set` in JavaScript?", type: 'mcq', options: ['A collection of unique values', 'A collection of key/value pairs', 'A sorted list of values', 'An immutable array'], answer: 'A collection of unique values' },
    { id: 60, testId: 4, difficulty: 'hard', question: "What is the `z-index` property in CSS used for?", type: 'mcq', options: ['To control the vertical stacking order of elements', 'To set the zoom level of an element', 'To define the font size', 'To create a 3D effect'], answer: 'To control the vertical stacking order of elements'},
    { id: 130, testId: 4, difficulty: 'medium', question: "What is `document.cookie`?", type: 'mcq', options: ['A function to bake cookies', 'A property that lets you read and write cookies for a web page', 'An API for web storage', 'A way to create HTTP requests'], answer: 'A property that lets you read and write cookies for a web page' },
    { id: 137, testId: 4, difficulty: 'medium', question: "What is the difference between `npm` and `npx`?", type: 'mcq', options: ['They are the same', '`npm` is for installing packages, `npx` is for executing packages', '`npm` is for frontend, `npx` is for backend', '`npx` is a typo for `npm`'], answer: '`npm` is for installing packages, `npx` is for executing packages' },
    { id: 116, testId: 4, difficulty: 'expert', question: "What is 'Time to First Byte' (TTFB)?", type: 'mcq', options: ['The time it takes for the browser to receive the first byte of a response from the server', 'The total time to load a page', 'The time to execute the first JavaScript file', 'The time to render the first pixel'], answer: 'The time it takes for the browser to receive the first byte of a response from the server' },
    { id: 121, testId: 4, difficulty: 'medium', question: "What is the `yield` keyword in JavaScript?", type: 'mcq', options: ['To pause and resume a generator function', 'To return a value from a standard function', 'To create a new thread', 'To declare a variable'], answer: 'To pause and resume a generator function' },
    { id: 156, testId: 4, difficulty: 'hard', question: "What is the `prefers-reduced-motion` media query?", type: 'mcq', options: ["To reduce the amount of JavaScript loaded", "To detect if the user has requested the system minimize the amount of non-essential motion it uses", "To decrease the image quality", "To switch to a dark theme"], answer: "To detect if the user has requested the system minimize the amount of non-essential motion it uses" },
    { id: 166, testId: 4, difficulty: 'hard', question: "What is the purpose of `.map` files often seen in production builds?", type: 'mcq', options: ['They are image files', 'They are source maps for debugging', 'They are configuration files', 'They are web manifest files'], answer: 'They are source maps for debugging' },
    { id: 201, testId: 4, difficulty: 'hard', question: "What is the `at()` method for JavaScript arrays?", type: 'mcq', options: ['To find an element at a specific index, supporting negative indices', 'To concatenate two arrays', 'To sort an array', 'To check if an array contains a certain value'], answer: 'To find an element at a specific index, supporting negative indices' },
    { id: 31, testId: 4, difficulty: 'medium', question: "Explain the concept of 'memoization' in React.", type: 'subjective', answer: "Memoization is an optimization technique used to speed up component rendering by caching the results of expensive function calls and returning the cached result when the same inputs occur again. `React.memo` and the `useMemo` hook are used for this." },
    { id: 32, testId: 4, difficulty: 'medium', question: "What is Cross-Site Scripting (XSS)?", type: 'subjective', answer: "XSS is a security vulnerability that allows an attacker to inject malicious scripts into web pages viewed by other users. React automatically escapes JSX content to prevent XSS attacks." },
    { id: 33, testId: 4, difficulty: 'medium', question: "What is the `useCallback` hook in React used for?", type: 'subjective', answer: "`useCallback` returns a memoized version of a callback function that only changes if one of the dependencies has changed. It's useful when passing callbacks to optimized child components that rely on reference equality." },
    { id: 35, testId: 4, difficulty: 'medium', question: "What is server-side rendering (SSR)?", type: 'subjective', answer: "Server-side rendering is the ability of an application to render the initial page on the server, sending a fully rendered HTML page to the client. This can improve performance and SEO." },
    { id: 36, testId: 4, difficulty: 'medium', question: "What are controlled and uncontrolled components in React?", type: 'subjective', answer: "A controlled component is a form element whose value is controlled by React state. An uncontrolled component is a form element whose value is handled by the DOM itself (usually via a `ref`)." },
    { id: 38, testId: 4, difficulty: 'medium', question: "What is CORS (Cross-Origin Resource Sharing)?", type: 'subjective', answer: "CORS is a browser security feature that restricts cross-origin HTTP requests initiated from scripts. Servers can opt-in to allow cross-origin requests by including specific HTTP headers." },
    { id: 39, testId: 4, difficulty: 'medium', question: "What are service workers?", type: 'subjective', answer: "Service workers are scripts that run in the background, separate from a web page, enabling features like push notifications and background sync. They are a key part of Progressive Web Apps (PWAs)." },
    { id: 40, testId: 4, difficulty: 'medium', question: "What is the critical rendering path?", type: 'subjective', answer: "The critical rendering path is the sequence of steps the browser goes through to convert HTML, CSS, and JavaScript into pixels on the screen. Optimizing it is key to faster page loads." },
    
    // Test 5 (Medium-Hard - 25 questions: 15 MCQ, 10 Subjective)
    { id: 24, testId: 5, difficulty: 'medium', question: "What is the `BEM` methodology in CSS?", type: 'subjective', answer: "BEM (Block, Element, Modifier) is a naming convention for classes in HTML and CSS. It helps create more readable, maintainable, and reusable components." },
    { id: 25, testId: 5, difficulty: 'medium', question: "What is prop drilling in React and how can you avoid it?", type: 'subjective', answer: "Prop drilling is the process of passing props down through multiple levels of nested components. It can be avoided using state management libraries (like Redux or Zustand) or React's Context API." },
    { id: 27, testId: 5, difficulty: 'medium', question: "What is a 'polyfill'?", type: 'subjective', answer: "A polyfill is a piece of code (usually JavaScript on the Web) used to provide modern functionality on older browsers that do not natively support it." },
    { id: 28, testId: 5, difficulty: 'medium', question: "What is the difference between `localStorage` and `sessionStorage`?", type: 'subjective', answer: "`localStorage` stores data with no expiration date, and it persists even when the browser is closed and reopened. `sessionStorage` only stores data for one session (until the browser tab is closed)." },
    { id: 29, testId: 5, difficulty: 'medium', question: "In CSS, what is specificity?", type: 'subjective', answer: "Specificity is the algorithm used by browsers to determine which CSS rule is the most 'specific' and therefore should be applied to an element when multiple conflicting rules exist. It is calculated based on the number of ID, class, and type selectors." },
    { id: 42, testId: 5, difficulty: 'medium', question: "What is a Web Component?", type: 'subjective', answer: "Web Components are a set of web platform APIs that allow you to create new custom, reusable, encapsulated HTML tags to use in web pages and web apps." },
    { id: 43, testId: 5, difficulty: 'medium', question: "Explain what ARIA attributes are and why they are important.", type: 'subjective', answer: "ARIA (Accessible Rich Internet Applications) are a set of attributes you can add to HTML elements to improve accessibility. They provide additional semantics for screen readers where native HTML is insufficient." },
    { id: 44, testId: 5, difficulty: 'medium', question: "What is the difference between `rem` and `em` units in CSS?", type: 'subjective', answer: "`em` is relative to the font-size of its direct or nearest parent. `rem` (root em) is relative to the font-size of the root element (`html`). `rem` is often preferred for consistency." },
    { id: 46, testId: 5, difficulty: 'hard', question: "Describe the JavaScript event loop.", type: 'subjective', answer: "The event loop is a mechanism that allows Node.js or the browser to perform non-blocking I/O operations. It continuously checks the message queue for new messages and pushes them onto the call stack when the stack is empty." },
    { id: 47, testId: 5, difficulty: 'hard', question: "What are WebSockets?", type: 'subjective', answer: "WebSockets provide a full-duplex communication channel over a single, long-lived TCP connection, allowing for real-time, two-way communication between the client and server." },
    { id: 193, testId: 5, difficulty: 'hard', question: "What is `aspect-ratio` in CSS?", type: 'mcq', options: ['The ratio of width to height of a box', 'A media query for screen aspect ratio', 'A filter for images', 'A property for fonts'], answer: 'The ratio of width to height of a box' },
    { id: 271, testId: 5, difficulty: 'hard', question: "What is the main purpose of a CDN (Content Delivery Network)?", type: 'mcq', options: ['To host the main application server', 'To distribute content closer to users to reduce latency', 'To manage DNS records', 'To act as a database'], answer: 'To distribute content closer to users to reduce latency'},
    { id: 272, testId: 5, difficulty: 'medium', question: "What is `npm`?", type: 'mcq', options: ['Node Project Manager', 'Node Package Manager', 'New Project Manager', 'Network Package Manager'], answer: 'Node Package Manager'},
    { id: 273, testId: 5, difficulty: 'medium', question: "In CSS, what does the `*` selector do?", type: 'mcq', options: ['Selects all elements', 'Selects the first element', 'Selects all class elements', 'Selects elements with an asterisk ID'], answer: 'Selects all elements'},
    { id: 274, testId: 5, difficulty: 'hard', question: "Which of these is NOT a valid HTTP status code category?", type: 'mcq', options: ['1xx (Informational)', '2xx (Successful)', '3xx (Redirection)', '6xx (Custom)'], answer: '6xx (Custom)'},
    { id: 275, testId: 5, difficulty: 'medium', question: "What does `git pull` do?", type: 'mcq', options: ['Pushes local changes to the remote repository', 'Fetches from and integrates with another repository or a local branch', 'Creates a new branch', 'Deletes a branch'], answer: 'Fetches from and integrates with another repository or a local branch'},
    { id: 276, testId: 5, difficulty: 'medium', question: "What is the purpose of a `.gitignore` file?", type: 'mcq', options: ['To list all project files', 'To specify intentionally untracked files to ignore', 'To configure git settings', 'To store git credentials'], answer: 'To specify intentionally untracked files to ignore'},
    { id: 277, testId: 5, difficulty: 'medium', question: "In React, what is the role of `props`?", type: 'mcq', options: ['To store internal component state', 'To pass data from a parent component to a child component', 'To handle component lifecycle events', 'To style components'], answer: 'To pass data from a parent component to a child component'},
    { id: 278, testId: 5, difficulty: 'hard', question: "What is `this` keyword in a JavaScript arrow function?", type: 'mcq', options: ['It is bound to the function itself', 'It is bound to the object that called the function', 'It is inherited from the parent scope (lexical scoping)', 'It is always `undefined`'], answer: 'It is inherited from the parent scope (lexical scoping)'},
    { id: 279, testId: 5, difficulty: 'medium', question: "Which HTML5 element is used to play video files?", type: 'mcq', options: ['<movie>', '<video>', '<media>', '<stream>'], answer: '<video>'},
    { id: 280, testId: 5, difficulty: 'medium', question: "Which of the following is a CSS preprocessor?", type: 'mcq', options: ['Sass', 'Babel', 'Webpack', 'jQuery'], answer: 'Sass'},
    { id: 281, testId: 5, difficulty: 'hard', question: "What is a `WeakSet` in JavaScript?", type: 'mcq', options: ['A set that can only hold objects and does so weakly', 'A set that cannot be modified', 'A set with poor performance', 'An alias for a regular Set'], answer: 'A set that can only hold objects and does so weakly'},
    { id: 282, testId: 5, difficulty: 'medium', question: "What is the `type` of `NaN` in JavaScript?", type: 'mcq', options: ['"nan"', '"null"', '"undefined"', '"number"'], answer: '"number"'},
    { id: 283, testId: 5, difficulty: 'medium', question: "Which CSS property is used to create space between the element's border and its content?", type: 'mcq', options: ['margin', 'padding', 'border-spacing', 'outline'], answer: 'padding'},
    { id: 284, testId: 5, difficulty: 'medium', question: "How do you create a hyperlink in HTML?", type: 'mcq', options: ['<link src="...">', '<a>', '<href>', '<link>'], answer: '<a>'},
    
    // Test 6 (Hard - 30 questions: 18 MCQ, 12 Subjective)
    { id: 48, testId: 6, difficulty: 'hard', question: "What is the `useLayoutEffect` hook in React and how does it differ from `useEffect`?", type: 'subjective', answer: "`useLayoutEffect` fires synchronously after all DOM mutations. It's useful for reading layout from the DOM and synchronously re-rendering. `useEffect` runs asynchronously and after a render is painted to the screen." },
    { id: 49, testId: 6, difficulty: 'hard', question: "How does webpack's module federation work?", type: 'subjective', answer: "Module Federation allows a JavaScript application to dynamically load code from another application at runtime. This enables building micro-frontend architectures where different teams can manage their own applications independently." },
    { id: 50, testId: 6, difficulty: 'hard', question: "What is an `IndexedDB` and what are its use cases?", type: 'subjective', answer: "IndexedDB is a low-level API for client-side storage of large amounts of structured data, including files/blobs. It's a transactional database system, ideal for applications that need to work offline or handle large datasets on the client." },
    { id: 51, testId: 6, difficulty: 'medium', question: "How would you debounce a function in JavaScript?", type: 'subjective', answer: "Debouncing is a technique to limit the rate at which a function gets called. You would create a wrapper function that uses `setTimeout` to delay execution. If the wrapper is called again before the timeout completes, the previous timeout is cleared and a new one is set." },
    { id: 52, testId: 6, difficulty: 'hard', question: "Explain how `this` keyword works in JavaScript.", type: 'subjective', answer: "The value of `this` depends on the context in which it is called. In a method, it refers to the owner object. In a regular function, it refers to the global object (or `undefined` in strict mode). In an event, it refers to the element that received the event. Arrow functions lexically bind `this` from their parent scope." },
    { id: 53, testId: 6, difficulty: 'hard', question: "What are CSS Custom Properties (Variables) and what are their benefits?", type: 'subjective', answer: "CSS Custom Properties are entities defined by CSS authors that contain specific values to be reused throughout a document. They are set using custom property notation (e.g., `--main-color: black;`) and are accessed using the `var()` function (e.g., `color: var(--main-color);`). Benefits include DRY code, easier theming, and dynamic changes via JavaScript." },
    { id: 54, testId: 6, difficulty: 'hard', question: "What is hydration in the context of SSR with React?", type: 'subjective', answer: "Hydration is the process of attaching event listeners and making the static HTML received from the server interactive. React 'hydrates' the server-rendered HTML by building a virtual DOM in memory and attaching the necessary JavaScript logic to the existing markup." },
    { id: 55, testId: 6, difficulty: 'hard', question: "What is the difference between a `Map` and a `WeakMap` in JavaScript?", type: 'subjective', answer: "A `WeakMap` only accepts objects as keys. The references to the keys are held 'weakly', meaning if there are no other references to an object used as a key, it can be garbage collected. A `Map` can have any value (primitive or object) as a key and holds strong references, preventing garbage collection." },
    { id: 57, testId: 6, difficulty: 'hard', question: "Explain event delegation.", type: 'subjective', answer: 'Event delegation is a technique involving adding a single event listener to a parent element to manage events for all of its children. When an event bubbles up from a child, the parent can check the event target and decide what to do. It improves performance by reducing the number of event listeners.'},
    { id: 58, testId: 6, difficulty: 'medium', question: "What is the purpose of the `key` prop in React lists?", type: 'subjective', answer: "Keys help React identify which items have changed, are added, or are removed. Keys should be stable, predictable, and unique to give the elements a stable identity, which helps React optimize rendering by reordering or reusing elements instead of re-creating them." },
    { id: 59, testId: 6, difficulty: 'medium', question: "What is a pure function?", type: 'subjective', answer: 'A pure function is a function that, given the same input, will always return the same output and has no side effects. This makes them predictable, testable, and easier to reason about.'},
    { id: 61, testId: 6, difficulty: 'hard', question: "Explain the concept of 'lifting state up' in React.", type: 'subjective', answer: "Lifting state up is a pattern where you move the shared state from multiple components up to their closest common ancestor. The ancestor then passes the state down to the children via props. This ensures a single source of truth for that state." },
    { id: 285, testId: 6, difficulty: 'hard', question: "In CSS Grid, what is the `fr` unit?", type: 'mcq', options: ['A fixed unit equal to 1 pixel', 'A unit representing a fraction of the free space in the grid container', 'A percentage of the viewport width', 'A unit relative to the font size'], answer: 'A unit representing a fraction of the free space in the grid container'},
    { id: 286, testId: 6, difficulty: 'hard', question: "What does the `finally` method do on a JavaScript Promise?", type: 'mcq', options: ['It executes only if the promise is resolved', 'It executes only if the promise is rejected', 'It executes when the promise is settled (either resolved or rejected)', 'It returns the final value of the promise'], answer: 'It executes when the promise is settled (either resolved or rejected)'},
    { id: 287, testId: 6, difficulty: 'hard', question: "What is `Object.seal()` in JavaScript?", type: 'mcq', options: ['It prevents any changes to an object', 'It prevents adding new properties and marks existing properties as non-configurable', 'It makes an object read-only', 'It deletes an object'], answer: 'It prevents adding new properties and marks existing properties as non-configurable'},
    { id: 288, testId: 6, difficulty: 'medium', question: "Which hook would you use to get a reference to a DOM element in React?", type: 'mcq', options: ['useState', 'useEffect', 'useRef', 'useContext'], answer: 'useRef'},
    { id: 289, testId: 6, difficulty: 'hard', question: "What is the main difference between PUT and PATCH HTTP methods?", type: 'mcq', options: ['PUT is for creating, PATCH is for updating', 'PUT replaces the entire resource, PATCH applies a partial update', 'PATCH is more secure than PUT', 'There is no difference'], answer: 'PUT replaces the entire resource, PATCH applies a partial update'},
    { id: 290, testId: 6, difficulty: 'medium', question: "Which HTML tag is used to create an ordered list?", type: 'mcq', options: ['<ul>', '<ol>', '<li>', '<dl>'], answer: '<ol>'},
    { id: 291, testId: 6, difficulty: 'hard', question: "What does the `...` rest parameter syntax do in a function signature?", type: 'mcq', options: ['It indicates the function returns a promise', 'It allows a function to accept an indefinite number of arguments as an array', 'It spreads an array into individual arguments', 'It is for comments'], answer: 'It allows a function to accept an indefinite number of arguments as an array'},
    { id: 292, testId: 6, difficulty: 'medium', question: "What is `git merge` used for?", type: 'mcq', options: ['To create a new repository', 'To switch branches', 'To join two or more development histories together', 'To delete a commit'], answer: 'To join two or more development histories together'},
    { id: 293, testId: 6, difficulty: 'hard', question: "What is a `Proxy` object in JavaScript?", type: 'mcq', options: ['A network proxy configuration', 'An object used to define custom behavior for fundamental operations (e.g., property lookup)', 'A placeholder for a future value', 'A security feature'], answer: 'An object used to define custom behavior for fundamental operations (e.g., property lookup)'},
    { id: 294, testId: 6, difficulty: 'hard', question: "Which CSS property can be used to prevent text from wrapping?", type: 'mcq', options: ['text-wrap: no-wrap', 'word-break: break-all', 'white-space: nowrap', 'overflow: hidden'], answer: 'white-space: nowrap'},
    { id: 295, testId: 6, difficulty: 'medium', question: "What is the `DOMContentLoaded` event?", type: 'mcq', options: ['It fires when the entire page has loaded, including all dependent resources such as stylesheets and images', 'It fires when the initial HTML document has been completely loaded and parsed', 'It fires when a user clicks on the document', 'It fires when an AJAX request is completed'], answer: 'It fires when the initial HTML document has been completely loaded and parsed'},
    { id: 296, testId: 6, difficulty: 'hard', question: "What is the purpose of the `super()` keyword in a class constructor?", type: 'mcq', options: ['To call the constructor of the parent class', 'To create a superclass', 'To refer to the current object instance', 'To define static methods'], answer: 'To call the constructor of the parent class'},
    { id: 297, testId: 6, difficulty: 'medium', question: "What is `aria-live` attribute used for?", type: 'mcq', options: ['To style live-streaming video', 'To indicate that an element will be updated, and to describe the types of updates', 'To set the language of an element', 'To hide an element from screen readers'], answer: 'To indicate that an element will be updated, and to describe the types of updates'},
    { id: 298, testId: 6, difficulty: 'hard', question: "Which is a valid way to create a private variable in a JavaScript class (ES2022+)?", type: 'mcq', options: ['`let myVar`', '`this._myVar`', '`const myVar`', '`#myVar`'], answer: '`#myVar`'},
    { id: 299, testId: 6, difficulty: 'hard', question: "What is a 'PureComponent' in React?", type: 'mcq', options: ['A component with no state', 'A component that only contains pure functions', 'A component that implements a shallow prop and state comparison to prevent unnecessary re-renders', 'A functional component'], answer: 'A component that implements a shallow prop and state comparison to prevent unnecessary re-renders'},
    { id: 300, testId: 6, difficulty: 'hard', question: "What is a `Symbol` in JavaScript used for?", type: 'mcq', options: ['To create unique object properties to avoid name collisions', 'To store special characters', 'To create vector graphics', 'To perform mathematical operations'], answer: 'To create unique object properties to avoid name collisions'},
    { id: 101, testId: 6, difficulty: 'hard', question: "What is `requestAnimationFrame` and when is it better than `setTimeout`?", type: 'mcq', options: ['It runs code after a specified delay, but with higher priority', 'It synchronizes your code with the browser\'s repaint cycle, making animations smoother', 'It is a newer version of `setInterval`', 'It is used exclusively for network requests'], answer: 'It synchronizes your code with the browser\'s repaint cycle, making animations smoother' },

    // Test 7 (Hard - 35 questions: 21 MCQ, 14 Subjective)
    { id: 62, testId: 7, difficulty: 'medium', question: "What is the `Array.prototype.reduce` method?", type: 'subjective', answer: "The `reduce` method executes a user-supplied 'reducer' callback function on each element of the array, in order, passing in the return value from the calculation on the preceding element. The final result of running the reducer across all elements of the array is a single value." },
    { id: 63, testId: 7, difficulty: 'medium', question: "What are semantic HTML tags?", type: 'subjective', answer: "Semantic HTML tags are tags that define the meaning of the content they contain. Examples include `<header>`, `<footer>`, `<article>`, and `<section>`. They improve accessibility and SEO by providing context to browsers and search engines." },
    { id: 64, testId: 7, difficulty: 'hard', question: "What is the difference between throttling and debouncing?", type: 'subjective', answer: "Debouncing groups a burst of events into one single event at the end of the burst. Throttling ensures that a function is called at most once per specified time period. Throttling is about guaranteeing a constant rate, while debouncing is about waiting for a pause in events." },
    { id: 65, testId: 7, difficulty: 'medium', question: "What is the CSS `display: grid` property used for?", type: 'subjective', answer: "It's the foundation of CSS Grid Layout, a two-dimensional layout system for the web. It lets you lay content out in rows and columns, and has many features that make building complex layouts straightforward." },
    { id: 67, testId: 7, difficulty: 'hard', question: "What is a Progressive Web App (PWA)?", type: 'subjective', answer: "A PWA is a web application that uses modern web capabilities to deliver an app-like experience to users. Features include the ability to work offline, be installable on the home screen, and provide push notifications, all thanks to technologies like service workers and web app manifests." },
    { id: 68, testId: 7, difficulty: 'medium', question: "How do you handle asynchronous operations in Redux?", type: 'subjective', answer: "By using middleware like Redux Thunk or Redux Saga. Thunk allows you to write action creators that return a function instead of an action object, which can then perform async logic and dispatch actions. Saga uses ES6 Generators to make async flows easier to manage." },
    { id: 69, testId: 7, difficulty: 'medium', question: "What is the `box-sizing: border-box;` CSS property for?", type: 'subjective', answer: "It tells the browser to account for any border and padding in the values you specify for an element's width and height. By default (`content-box`), width and height only apply to the content, and padding/border are added on top, making layout calculations difficult." },
    { id: 70, testId: 7, difficulty: 'hard', question: "What is a 'memory leak' in JavaScript?", type: 'subjective', answer: "A memory leak occurs when a piece of memory that is no longer needed is not released by the garbage collector. Common causes include un-removed event listeners, uncleared timers, and closures holding references to objects that are no longer in scope." },
    { id: 72, testId: 7, difficulty: 'medium', question: "What is a 'responsive design'?", type: 'subjective', answer: "Responsive web design is an approach that makes web pages render well on a variety of devices and window or screen sizes. It typically involves using media queries, flexible grids, and responsive images." },
    { id: 73, testId: 7, difficulty: 'medium', question: "What is the `Array.prototype.map` function?", type: 'subjective', answer: "The `map` method creates a new array populated with the results of calling a provided function on every element in the calling array. It's a fundamental method for transforming data in JavaScript." },
    { id: 74, testId: 7, difficulty: 'hard', question: "What are HTTP cookies?", type: 'subjective', answer: "Cookies are small pieces of data that a server sends to the user's web browser. The browser may store the cookie and send it back to the same server with later requests. They are used for session management, personalization, and tracking." },
    { id: 75, testId: 7, difficulty: 'hard', question: "What is an `AbortController` and when would you use it?", type: 'subjective', answer: "An `AbortController` is a modern browser API that allows you to abort one or more web requests as desired. It is commonly used to cancel `fetch` requests when a component unmounts or when a user performs an action that makes the request irrelevant, preventing race conditions and unnecessary processing." },
    { id: 76, testId: 7, difficulty: 'hard', question: "How does React's reconciliation algorithm work?", type: 'subjective', answer: "Reconciliation is the process through which React updates the DOM. When a component's state changes, React creates a new virtual DOM tree and compares it ('diffing') with the previous one. It then computes the minimal set of changes needed to update the real DOM, and applies them in a batch." },
    { id: 77, testId: 7, difficulty: 'hard', question: "What are render props in React?", type: 'subjective', answer: "The term 'render prop' refers to a technique for sharing code between React components using a prop whose value is a function. A component with a render prop takes a function that returns a React element and calls it instead of implementing its own render logic." },
    { id: 204, testId: 7, difficulty: 'hard', question: "What is the CSS `overscroll-behavior` property?", type: 'mcq', options: ['It controls what happens when a user scrolls past the boundary of a scrolling area', 'It determines the speed of scrolling', 'It enables smooth scrolling', 'It is an alias for `overflow`'], answer: "It controls what happens when a user scrolls past the boundary of a scrolling area" },
    { id: 205, testId: 7, difficulty: 'hard', question: "In JavaScript, what is the difference between a `class` and an `object`?", type: 'mcq', options: ['There is no difference', 'A class is a template for creating objects', 'An object is a template for creating classes', 'Classes are for data, objects are for functions'], answer: "A class is a template for creating objects" },
    { id: 206, testId: 7, difficulty: 'hard', question: "What is the purpose of `git rebase`?", type: 'mcq', options: ['To merge two branches', 'To move or combine a sequence of commits to a new base commit', 'To delete a branch', 'To create a backup of the repository'], answer: "To move or combine a sequence of commits to a new base commit" },
    { id: 207, testId: 7, difficulty: 'hard', question: "What does the `SameSite` attribute on a cookie control?", type: 'mcq', options: ['The cookie\'s expiration date', 'Whether the cookie is sent with cross-site requests', 'The cookie\'s value', 'The cookie\'s domain'], answer: "Whether the cookie is sent with cross-site requests" },
    { id: 208, testId: 7, difficulty: 'hard', question: "What is `Promise.race()`?", type: 'mcq', options: ['It returns a promise that fulfills or rejects as soon as one of the promises in the iterable fulfills or rejects', 'It runs all promises in parallel and returns the fastest one', 'It is a syntax error', 'It returns a random promise from the iterable'], answer: "It returns a promise that fulfills or rejects as soon as one of the promises in the iterable fulfills or rejects" },
    { id: 209, testId: 7, difficulty: 'hard', question: "Which of these is a structural pseudo-class in CSS?", type: 'mcq', options: [':hover', ':active', ':nth-child(n)', ':focus'], answer: ":nth-child(n)" },
    { id: 210, testId: 7, difficulty: 'hard', question: "What is the purpose of a `webpack loader`?", type: 'mcq', options: ['To run tasks before or after the build', 'To transform files from a different language (like TypeScript) into JavaScript', 'To bundle multiple files into one', 'To optimize images'], answer: "To transform files from a different language (like TypeScript) into JavaScript" },
    { id: 211, testId: 7, difficulty: 'hard', question: "What is the `Shadow DOM`?", type: 'mcq', options: ['A virtual copy of the DOM', 'A hidden DOM that cannot be manipulated', 'A browser technology for encapsulating the structure and style of a web component', 'A dark theme for the DOM'], answer: "A browser technology for encapsulating the structure and style of a web component" },
    { id: 212, testId: 7, difficulty: 'expert', question: "What is a `B-Tree` and why is it used in databases?", type: 'mcq', options: ['A binary search tree', 'A self-balancing tree data structure that maintains sorted data and allows searches, sequential access, insertions, and deletions in logarithmic time', 'A data structure for storing boolean values', 'A type of hash table'], answer: "A self-balancing tree data structure that maintains sorted data and allows searches, sequential access, insertions, and deletions in logarithmic time" },
    { id: 213, testId: 7, difficulty: 'hard', question: "What is the HTTP `Authorization` header used for?", type: 'mcq', options: ['To specify the media type of the resource', 'To contain the credentials to authenticate a user agent with a server', 'To indicate which character sets are acceptable', 'To control caching'], answer: "To contain the credentials to authenticate a user agent with a server" },
    { id: 214, testId: 7, difficulty: 'hard', question: "Which JavaScript feature helps avoid 'callback hell'?", type: 'mcq', options: ['Promises', 'Events', 'Closures', 'Prototypes'], answer: 'Promises'},
    { id: 215, testId: 7, difficulty: 'hard', question: "What is the difference between `display: none` and `visibility: hidden`?", type: 'mcq', options: ['There is no difference', '`display: none` removes the element from the document flow, while `visibility: hidden` only hides it visually but it still takes up space', '`visibility: hidden` removes the element from the document flow', '`display: none` is for images only'], answer: '`display: none` removes the element from the document flow, while `visibility: hidden` only hides it visually but it still takes up space'},
    { id: 216, testId: 7, difficulty: 'hard', question: "What is a `closure` in JavaScript?", type: 'mcq', options: ['A function bundled with references to its surrounding state (the lexical environment)', 'A way to close a web socket', 'A security vulnerability', 'A type of variable'], answer: 'A function bundled with references to its surrounding state (the lexical environment)'},
    { id: 217, testId: 7, difficulty: 'hard', question: "What does the `async` keyword do in a JavaScript function declaration?", type: 'mcq', options: ['It makes the function run on a separate thread', 'It makes the function return a `Promise`', 'It blocks the execution of the code', 'It indicates the function is a security risk'], answer: 'It makes the function return a `Promise`'},
    { id: 218, testId: 7, difficulty: 'hard', question: "Which of the following is NOT a core concept of Redux?", type: 'mcq', options: ['Store', 'Action', 'Reducer', 'Component'], answer: 'Component'},
    { id: 219, testId: 7, difficulty: 'hard', question: "What is a `constructor` in a JavaScript class?", type: 'mcq', options: ['A method for deleting objects', 'A special method for creating and initializing an object instance of that class', 'A function that builds the class', 'A static method'], answer: 'A special method for creating and initializing an object instance of that class'},
    { id: 220, testId: 7, difficulty: 'expert', question: "What does 'LCP' stand for in Core Web Vitals?", type: 'mcq', options: ['Largest Contentful Paint', 'Layout Computation Period', 'Latency Critical Path', 'Loading Content Priority'], answer: 'Largest Contentful Paint'},
    { id: 221, testId: 7, difficulty: 'hard', question: "What is a 'Generator' function in JavaScript (`function*`)?", type: 'mcq', options: ['A function that generates random numbers', 'A function that can be paused and resumed', 'A function that automatically generates documentation', 'A function for generating HTML'], answer: 'A function that can be paused and resumed'},
    { id: 222, testId: 7, difficulty: 'hard', question: "Which CSS value is used to make a flex item grow and shrink as needed, ignoring its initial size?", type: 'mcq', options: ['flex: 1', 'flex: auto', 'flex: initial', 'flex: none'], answer: 'flex: 1'},
    { id: 223, testId: 7, difficulty: 'hard', question: "What is a `meta` tag in HTML used for?", type: 'mcq', options: ['To define the main content', 'To provide metadata about the HTML document, such as character set, description, and viewport settings', 'To create a table', 'To embed another HTML page'], answer: 'To provide metadata about the HTML document, such as character set, description, and viewport settings'},
    
    // Test 8 (Very Hard - 40 questions: 24 MCQ, 16 Subjective)
    { id: 78, testId: 8, difficulty: 'hard', question: "Explain Content Security Policy (CSP).", type: 'subjective', answer: "CSP is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross-Site Scripting (XSS) and data injection attacks. It's a browser mechanism that allows you to create a whitelist of sources of trusted content and will only allow content from those sources to be loaded." },
    { id: 79, testId: 8, difficulty: 'hard', question: "What are some performance optimization strategies for a large-scale React application?", type: 'subjective', answer: "Strategies include code splitting using `React.lazy`, memoization with `useMemo` and `useCallback`, windowing large lists with libraries like `react-window`, avoiding unnecessary re-renders with `React.memo`, and proper dependency management in `useEffect`." },
    { id: 80, testId: 8, difficulty: 'hard', question: "Describe how you would implement internationalization (i18n) in a React application.", type: 'subjective', answer: "Implementation usually involves a library like `react-i18next`. You would store translations in JSON files for each language, use a provider to wrap the app, and use a hook (e.g., `useTranslation`) to access the translation function (`t`) and switch languages. The `t` function would take a key and return the appropriate string for the current language." },
    { id: 81, testId: 8, difficulty: 'expert', question: "How would you optimize web font loading?", type: 'subjective', answer: 'Strategies include: 1. Self-hosting fonts to avoid external network requests. 2. Using `font-display: swap` to prevent blocking text rendering. 3. Preloading critical fonts using `<link rel="preload">`. 4. Subsetting fonts to only include the characters you need. 5. Using modern formats like WOFF2.' },
    { id: 82, testId: 8, difficulty: 'hard', question: "What are generator functions in JavaScript?", type: 'subjective', answer: "Generators are functions that can be exited and later re-entered. Their context (variable bindings) will be saved across re-entrances. They are defined with the `function*` syntax and use the `yield` keyword to pause and return a value. They are fundamental to libraries like Redux Saga." },
    { id: 83, testId: 8, difficulty: 'hard', question: "What is the purpose of the `srcset` attribute on an `<img>` tag?", type: 'subjective', answer: "The `srcset` attribute allows you to define a set of different image sources for the browser to choose from, based on the device's resolution and screen size. This enables serving high-resolution images to retina displays while sending smaller images to lower-resolution devices, improving performance." },
    { id: 84, testId: 8, difficulty: 'hard', question: "What is CSS Containment?", type: 'subjective', answer: "The CSS `contain` property allows an author to indicate that an element and its contents are, as much as possible, independent of the rest of the document tree. This allows the browser to optimize rendering by not needing to re-layout or re-paint content outside the contained element when its contents change." },
    { id: 86, testId: 8, difficulty: 'expert', question: "What is a JAMstack architecture?", type: 'subjective', answer: "JAMstack (JavaScript, APIs, Markup) is a modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt Markup. Sites are pre-rendered into static files, served from a CDN, and any dynamic functionality is handled by client-side JavaScript talking to APIs." },
    { id: 87, testId: 8, difficulty: 'hard', question: "What is `requestAnimationFrame` and when is it better than `setTimeout`?", type: 'subjective', answer: "`requestAnimationFrame` tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. It is better for animations because it's optimized by the browser to produce smoother animations, and it pauses when the tab is inactive, saving CPU cycles." },
    { id: 88, testId: 8, difficulty: 'hard', question: "What is WebAssembly (Wasm)?", type: 'subjective', answer: "WebAssembly is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications. It allows running code written in languages like C++ and Rust on the web at near-native speed." },
    { id: 89, testId: 8, difficulty: 'expert', question: "How does HTTP/2 improve performance over HTTP/1.1?", type: 'subjective', answer: "HTTP/2 introduces several key improvements: 1. Multiplexing: Multiple requests can be sent in parallel over a single TCP connection. 2. Header Compression: Reduces the overhead of HTTP headers. 3. Server Push: Allows the server to send resources to the client before the client requests them." },
    { id: 90, testId: 8, difficulty: 'hard', question: "What is an `IntersectionObserver`?", type: 'subjective', answer: "The Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport. It is highly performant and commonly used for lazy-loading images or implementing infinite scrolling." },
    { id: 91, testId: 8, difficulty: 'hard', question: "What are CSS Houdini APIs?", type: 'subjective', answer: "CSS Houdini is a set of low-level APIs that exposes parts of the CSS engine, giving developers the power to extend CSS by creating their own CSS features. This includes the Paint API, Layout API, and Typed OM, allowing for more powerful and performant styling and layout capabilities." },
    { id: 92, testId: 8, difficulty: 'hard', question: "What is the `Proxy` object in JavaScript?", type: 'subjective', answer: "A `Proxy` object is used to define custom behavior for fundamental operations (e.g., property lookup, assignment, enumeration, function invocation). It allows you to create a 'trap' for operations on a target object, enabling metaprogramming. It's used by frameworks like Vue.js for reactivity." },
    { id: 93, testId: 8, difficulty: 'expert', question: "How do you prevent CSS style collisions in a large application?", type: 'subjective', answer: "Strategies include: 1. CSS Modules: Scopes class names locally to the component. 2. CSS-in-JS libraries (e.g., Styled Components): Encapsulates styles within the component. 3. BEM Naming Convention: A strict naming methodology to avoid conflicts. 4. Utility-first CSS (e.g., Tailwind CSS): Composes interfaces from low-level utility classes." },
    { id: 94, testId: 8, difficulty: 'hard', question: "What is GraphQL Subscriptions?", type: 'subjective', answer: "GraphQL Subscriptions are a feature that allows a server to send data to its clients when a specific event happens. They are usually implemented with WebSockets and maintain a steady connection to the server, enabling real-time updates." },
    { id: 224, testId: 8, difficulty: 'expert', question: "What is 'FID' (First Input Delay) in Core Web Vitals?", type: 'mcq', options: ['The time from when a user first interacts with a page to the time when the browser is actually able to respond to that interaction', 'The time it takes for the first content to paint', 'The total time the main thread was blocked', 'The frequency of input delays'], answer: 'The time from when a user first interacts with a page to the time when the browser is actually able to respond to that interaction'},
    { id: 225, testId: 8, difficulty: 'hard', question: "What is the `module/nomodule` pattern for script tags?", type: 'mcq', options: ['A way to load different scripts for different modules', 'A way to serve modern code to modern browsers and legacy code to older browsers', 'A security feature to block modules', 'A pattern for Node.js only'], answer: 'A way to serve modern code to modern browsers and legacy code to older browsers'},
    { id: 226, testId: 8, difficulty: 'expert', question: "What is a 'flame graph' used for in performance profiling?", type: 'mcq', options: ['Visualizing network requests', 'Visualizing CPU stack traces to find hot paths in code', 'Displaying memory allocation', 'Showing CSS rendering performance'], answer: 'Visualizing CPU stack traces to find hot paths in code'},
    { id: 227, testId: 8, difficulty: 'hard', question: "What is the `inputmode` attribute on an `<input>` element?", type: 'mcq', options: ['It defines the type of input (e.g., text, password)', 'It provides a hint to the browser for which keyboard to display (e.g., numeric, email)', 'It sets the input method for a form', 'It is a deprecated attribute'], answer: 'It provides a hint to the browser for which keyboard to display (e.g., numeric, email)'},
    { id: 228, testId: 8, difficulty: 'expert', question: "What is 'Connection-Specific Head-of-Line Blocking'?", type: 'mcq', options: ['A problem in TCP where a lost packet can block all subsequent packets', 'A problem specific to HTTP/2', 'A server configuration issue', 'A DNS resolution problem'], answer: 'A problem in TCP where a lost packet can block all subsequent packets'},
    { id: 229, testId: 8, difficulty: 'hard', question: "What is `Intl.PluralRules` used for?", type: 'mcq', options: ['To format numbers', 'To enable plural-sensitive formatting and language-specific rules for plurals', 'To handle date and time', 'To compare strings'], answer: 'To enable plural-sensitive formatting and language-specific rules for plurals'},
    { id: 230, testId: 8, difficulty: 'hard', question: "What is the main advantage of WebP image format?", type: 'mcq', options: ['It is supported by all browsers', 'It provides superior lossless and lossy compression for images on the web', 'It is a vector format', 'It is the only format that supports animation'], answer: 'It provides superior lossless and lossy compression for images on the web'},
    { id: 231, testId: 8, difficulty: 'hard', question: "What is a `Shared Worker`?", type: 'mcq', options: ['A web worker that can be accessed from several browsing contexts (e.g., windows, iframes) from the same origin', 'A worker that is shared between different users', 'A worker for performing `ArrayBuffer` operations', 'A deprecated API'], answer: 'A web worker that can be accessed from several browsing contexts (e.g., windows, iframes) from the same origin'},
    { id: 232, testId: 8, difficulty: 'hard', question: "What is `git bisect` used for?", type: 'mcq', options: ['To split a commit into two', 'To find the specific commit that introduced a bug', 'To create a new branch', 'To merge two commits'], answer: 'To find the specific commit that introduced a bug'},
    { id: 233, testId: 8, difficulty: 'hard', question: "Which CSS function can be used for mathematical expressions?", type: 'mcq', options: ['`math()`', '`expression()`', '`calc()`', '`compute()`'], answer: '`calc()`'},
    { id: 234, testId: 8, difficulty: 'expert', question: "What is a 'Merkle Tree'?", type: 'mcq', options: ['A data structure used in blockchain and Git for efficiently and securely verifying the contents of large data structures', 'A type of binary search tree', 'A CSS layout model', 'A network routing algorithm'], answer: 'A data structure used in blockchain and Git for efficiently and securely verifying the contents of large data structures'},
    { id: 235, testId: 8, difficulty: 'hard', question: "What is the purpose of the `rel='noopener'` attribute on a link?", type: 'mcq', options: ['To open the link in a new tab', 'To prevent the new page from being able to access the `window.opener` property, for security', 'To tell search engines not to follow the link', 'To preload the link'], answer: 'To prevent the new page from being able to access the `window.opener` property, for security'},
    { id: 236, testId: 8, difficulty: 'hard', question: "What is the difference between `for...in` and `for...of` loops?", type: 'mcq', options: ['`for...in` iterates over property names, `for...of` iterates over property values of an iterable', '`for...of` is faster', 'There is no difference', '`for...in` is for arrays, `for...of` is for objects'], answer: '`for...in` iterates over property names, `for...of` iterates over property values of an iterable'},
    { id: 237, testId: 8, difficulty: 'hard', question: "What is `ESLint`?", type: 'mcq', options: ['A JavaScript bundler', 'A tool for identifying and reporting on patterns found in ECMAScript/JavaScript code', 'A testing framework', 'A JavaScript compiler'], answer: 'A tool for identifying and reporting on patterns found in ECMAScript/JavaScript code'},
    { id: 238, testId: 8, difficulty: 'expert', question: "What is the 'Composite' design pattern?", type: 'mcq', options: ['A pattern that allows you to compose objects into tree structures to represent part-whole hierarchies', 'A pattern for creating objects', 'A pattern for managing state', 'A pattern for asynchronous programming'], answer: 'A pattern that allows you to compose objects into tree structures to represent part-whole hierarchies'},
    { id: 239, testId: 8, difficulty: 'hard', question: "What does the CSS `all: unset` do?", type: 'mcq', options: ['Resets all properties to their initial values', 'Changes all properties of an element to their default values in the user-agent stylesheet', 'Makes all properties `inherit` from their parent', 'It is not a valid CSS property'], answer: 'Changes all properties of an element to their default values in the user-agent stylesheet'},
    { id: 240, testId: 8, difficulty: 'hard', question: "What is `React.StrictMode`?", type: 'mcq', options: ['A component for enforcing coding standards', 'A tool for highlighting potential problems in an application', 'A production-only optimization', 'A way to enable strict type checking'], answer: 'A tool for highlighting potential problems in an application'},

    // Test 9 (Expert - 45 questions: 27 MCQ, 18 Subjective)
    { id: 95, testId: 9, difficulty: 'hard', question: "What is a `Symbol` in JavaScript?", type: 'subjective', answer: "A `Symbol` is a unique and immutable primitive data type. Symbols are often used as keys for object properties to avoid name collisions, as a symbol value is guaranteed to be unique." },
    { id: 96, testId: 9, difficulty: 'expert', question: "What is the `ResizeObserver` API?", type: 'subjective', answer: "The `ResizeObserver` API provides a performant mechanism by which code can monitor an element for changes to its size. It's more efficient than listening to the window's resize event and manually checking element dimensions." },
    { id: 97, testId: 9, difficulty: 'hard', question: "What is the difference between `let`, `const`, and `var`?", type: 'subjective', answer: "`var` is function-scoped and hoisted. `let` and `const` are block-scoped and are not initialized until their definition is evaluated (Temporal Dead Zone). `const` cannot be reassigned, while `let` can." },
    { id: 98, testId: 9, difficulty: 'hard', question: "What is WebRTC?", type: 'subjective', answer: "WebRTC (Web Real-Time Communication) is a technology that enables web applications and sites to capture and optionally stream audio and/or video media, as well as to exchange arbitrary data between browsers without requiring an intermediary. It's used for video chat and peer-to-peer file sharing." },
    { id: 99, testId: 9, difficulty: 'expert', question: "How can you optimize the performance of a CSS animation?", type: 'subjective', answer: "To optimize CSS animations, you should primarily animate properties that do not trigger a re-layout or re-paint. These are `transform` and `opacity`. Animating these can be offloaded to the GPU. Using `will-change` property can also give the browser a hint about upcoming transformations." },
    { id: 100, testId: 9, difficulty: 'hard', question: "What is 'code splitting'?", type: 'subjective', answer: "Code splitting is a feature supported by bundlers like Webpack and Rollup which can create multiple bundles that can be dynamically loaded at runtime. It's used to create smaller initial bundles and on-demand load code for features that the user needs, improving initial page load time." },
    { id: 101, testId: 9, difficulty: 'hard', question: "What are ES modules?", type: 'subjective', answer: 'ES Modules (ESM) are the official, standardized module system for JavaScript. They use the `import` and `export` statements. They are resolved statically, which allows for optimizations like tree shaking, and have a different loading mechanism than older module systems like CommonJS.' },
    { id: 103, testId: 9, difficulty: 'expert', question: "What is a 'flame graph' and how is it used for performance profiling?", type: 'subjective', answer: "A flame graph is a visualization of profiled software, allowing the most frequent code-paths to be identified quickly and accurately. Each box represents a function in the stack. The width of the box shows the time it was on the CPU or the number of times it was seen in the samples. It's used to find performance bottlenecks in your code." },
    { id: 104, testId: 9, difficulty: 'hard', question: "What is OAuth 2.0?", type: 'subjective', answer: "OAuth 2.0 is an authorization framework that enables applications to obtain limited access to user accounts on an HTTP service. It delegates user authentication to the service that hosts the user account, and authorizes third-party applications to access the user account. It does not share password data but instead uses authorization tokens." },
    { id: 105, testId: 9, difficulty: 'expert', question: "Explain the concept of 'islands architecture'.", type: 'subjective', answer: "Islands architecture is a pattern for building websites that aims to reduce the amount of JavaScript shipped to the client by rendering HTML pages on the server and injecting self-contained, interactive components ('islands') into them. This improves site performance by defaulting to zero JavaScript and only adding it where necessary." },
    { id: 106, testId: 9, difficulty: 'expert', question: "What is an Abstract Syntax Tree (AST)?", type: 'subjective', answer: "An AST is a tree representation of the abstract syntactic structure of source code. Tools like Babel and webpack use ASTs to understand and transform code. For example, Babel parses code into an AST, transforms it (e.g., converting ES6 to ES5), and then generates the transformed code back from the AST." },
    { id: 107, testId: 9, difficulty: 'expert', question: "What are the advantages and disadvantages of micro-frontends?", type: 'subjective', answer: "Advantages: Independent deployments, autonomous teams, technology-agnostic architecture. Disadvantages: Increased complexity in routing and state management, potential for code duplication and larger bundle sizes if not managed properly, and challenges in maintaining a consistent user experience." },
    { id: 108, testId: 9, difficulty: 'expert', question: "What is the purpose of the `useImperativeHandle` hook in React?", type: 'subjective', answer: "`useImperativeHandle` customizes the instance value that is exposed to parent components when using `ref`. It's used in conjunction with `forwardRef` to expose specific functions from a child component to a parent, rather than the entire component instance." },
    { id: 109, testId: 9, difficulty: 'expert', question: "Explain the concept of 'island architecture'.", type: 'subjective', answer: "Island architecture is a design pattern for web pages where interactive components ('islands') are delivered as isolated, self-contained units on an otherwise static HTML page. This reduces the amount of JavaScript shipped to the client, improving performance. Frameworks like Astro use this pattern." },
    { id: 110, testId: 9, difficulty: 'expert', question: "What is `stale-while-revalidate` caching strategy?", type: 'subjective', answer: "`stale-while-revalidate` is a caching strategy where a cached response is served immediately (stale) while a new request is made in the background to update the cache for future requests. This provides a fast response time while keeping data fresh." },
    { id: 111, testId: 9, difficulty: 'expert', question: "What are some advanced SVG optimization techniques?", type: 'subjective', answer: "Advanced techniques include: 1. Running the SVG through an optimizer tool like SVGO. 2. Manually removing unnecessary metadata and groups. 3. Simplifying paths and shapes. 4. Using `<defs>` and `<use>` for repeated elements. 5. Converting strokes to fills where possible." },
    { id: 112, testId: 9, difficulty: 'expert', question: "Describe the 'Composite' design pattern and give a frontend example.", type: 'subjective', answer: "The Composite pattern lets you compose objects into tree structures to represent part-whole hierarchies. A frontend example is a UI component library where simple components (like Button) and complex components (like Form, which contains Buttons and Inputs) are treated uniformly. Both can have a `render()` method." },
    { id: 113, testId: 9, difficulty: 'expert', question: "What is `Intl` object in JavaScript?", type: 'subjective', answer: "The `Intl` object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting. It's essential for building applications that support multiple languages and regions." },
    { id: 241, testId: 9, difficulty: 'expert', question: "What is `TC39`?", type: 'mcq', options: ['The technical committee that standardizes ECMAScript (JavaScript)', 'A JavaScript runtime engine', 'A web browser', 'A code formatting tool'], answer: 'The technical committee that standardizes ECMAScript (JavaScript)'},
    { id: 242, testId: 9, difficulty: 'expert', question: "Which of these is a primary goal of the 'islands architecture'?", type: 'mcq', options: ['To reduce the amount of JavaScript shipped to the client', 'To simplify server-side routing', 'To enforce a single frontend framework', 'To make all components stateful'], answer: 'To reduce the amount of JavaScript shipped to the client'},
    { id: 243, testId: 9, difficulty: 'expert', question: "What is a 'side effect' in the context of functional programming and React?", type: 'mcq', options: ['The return value of a function', 'Any interaction with the outside world from within a function, like fetching data or manipulating the DOM', 'A bug in the code', 'A performance optimization'], answer: 'Any interaction with the outside world from within a function, like fetching data or manipulating the DOM'},
    { id: 244, testId: 9, difficulty: 'expert', question: "In the context of browser performance, what is 'jank'?", type: 'mcq', options: ['Slow network requests', 'Stuttering or jerky animations and scrolling', 'A security vulnerability', 'Incorrectly rendered CSS'], answer: 'Stuttering or jerky animations and scrolling'},
    { id: 245, testId: 9, difficulty: 'expert', question: "What is `Object.is()` in JavaScript and how does it differ from `===`?", type: 'mcq', options: ['It is the same as `===`', 'It treats `+0` and `-0` as different, and `NaN` as equal to `NaN`', 'It performs type coercion', 'It is used for comparing object references only'], answer: 'It treats `+0` and `-0` as different, and `NaN` as equal to `NaN`'},
    { id: 246, testId: 9, difficulty: 'expert', question: "What is a `webpack plugin`?", type: 'mcq', options: ['It transforms source code of a single file', 'It is a broader tool that can perform actions on bundles, like minification or environment variable injection', 'It is another name for a loader', 'It is a configuration file'], answer: 'It is a broader tool that can perform actions on bundles, like minification or environment variable injection'},
    { id: 247, testId: 9, difficulty: 'hard', question: "What is the `dialog` element in HTML?", type: 'mcq', options: ['A container for a conversation', 'A native HTML element for creating dialog boxes, modals, and other popups', 'A tag for defining a script', 'A deprecated tag for layout'], answer: 'A native HTML element for creating dialog boxes, modals, and other popups'},
    { id: 248, testId: 9, difficulty: 'hard', question: "Which is NOT a valid value for the `position` property in CSS?", type: 'mcq', options: ['static', 'relative', 'absolute', 'centered'], answer: 'centered'},
    { id: 249, testId: 9, difficulty: 'hard', question: "What is 'memoization'?", type: 'mcq', options: ['A way to store data in memory', 'An optimization technique that caches the results of expensive function calls', 'A memory leak', 'A JavaScript data type'], answer: 'An optimization technique that caches the results of expensive function calls'},
    { id: 250, testId: 9, difficulty: 'hard', question: "Which hook should be used to perform side effects in a React functional component?", type: 'mcq', options: ['useState', 'useContext', 'useEffect', 'useReducer'], answer: 'useEffect'},
    // ... more MCQs to reach 27
    { id: 251, testId: 9, difficulty: 'expert', question: "What is the `useDeferredValue` hook in React?", type: 'mcq', options: ['A hook to delay component rendering', 'A hook that lets you defer updating a part of the UI', 'A hook for fetching data', 'A hook for managing form state'], answer: 'A hook that lets you defer updating a part of the UI'},
    { id: 252, testId: 9, difficulty: 'hard', question: "What is `git stash` used for?", type: 'mcq', options: ['To delete a branch', 'To temporarily store modified, tracked files in order to switch branches', 'To finalize a commit', 'To view the commit history'], answer: 'To temporarily store modified, tracked files in order to switch branches'},
    { id: 253, testId: 9, difficulty: 'hard', question: "What is the purpose of an `SRI` (Subresource Integrity) attribute?", type: 'mcq', options: ['To ensure that fetched files (e.g., from a CDN) have not been manipulated', 'To improve SEO', 'To define the style of a resource', 'To manage caching'], answer: 'To ensure that fetched files (e.g., from a CDN) have not been manipulated'},
    { id: 254, testId: 9, difficulty: 'hard', question: "In CSS, what is the `:root` pseudo-class?", type: 'mcq', options: ['It selects the root element of a document, which is `<html>` in HTML', 'It selects all root-level directories', 'It selects the first element of the page', 'It is not a valid pseudo-class'], answer: 'It selects the root element of a document, which is `<html>` in HTML'},
    { id: 255, testId: 9, difficulty: 'hard', question: "What is `JSONP`?", type: 'mcq', options: ['A more secure version of JSON', 'A historical technique for making cross-domain requests that works by creating a `<script>` tag', 'A JSON preprocessor', 'A database format'], answer: 'A historical technique for making cross-domain requests that works by creating a `<script>` tag'},
    { id: 256, testId: 9, difficulty: 'expert', question: "What is the 'Observer' design pattern?", type: 'mcq', options: ['A behavioral pattern that lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they’re observing', 'A pattern for creating objects', 'A pattern for structuring components', 'A pattern for database connections'], answer: 'A behavioral pattern that lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they’re observing'},
    { id: 257, testId: 9, difficulty: 'hard', question: "What is `localStorage`?", type: 'mcq', options: ['A way to store key-value pairs locally that persists even after the browser is closed', 'Temporary session storage', 'A server-side database', 'A cookie management API'], answer: 'A way to store key-value pairs locally that persists even after the browser is closed'},
    { id: 258, testId: 9, difficulty: 'hard', question: "What is a `Data URI`?", type: 'mcq', options: ['A URI for a database', 'A URI scheme that provides a way to include data in-line in web pages as if they were external resources', 'A URL to a data-fetching API', 'A type of JSON object'], answer: 'A URI scheme that provides a way to include data in-line in web pages as if they were external resources'},
    { id: 259, testId: 9, difficulty: 'hard', question: "What is `SVG`?", type: 'mcq', options: ['A raster image format', 'A JavaScript library', 'An XML-based vector image format for two-dimensional graphics', 'A CSS framework'], answer: 'An XML-based vector image format for two-dimensional graphics'},
    { id: 260, testId: 9, difficulty: 'expert', question: "What is `CLS` (Cumulative Layout Shift)?", type: 'mcq', options: ['A measure of visual stability, quantifying how much unexpected layout shift users experience', 'A CSS property for shifting layouts', 'A JavaScript method for animations', 'A server logging system'], answer: 'A measure of visual stability, quantifying how much unexpected layout shift users experience'},
    { id: 261, testId: 9, difficulty: 'hard', question: "Which property is used to change the font of an element?", type: 'mcq', options: ['font-style', 'font-weight', 'font-family', 'text-decoration'], answer: 'font-family'},
    { id: 262, testId: 9, difficulty: 'hard', question: "What is `npm audit` used for?", type: 'mcq', options: ['To check for outdated packages', 'To scan your project for security vulnerabilities', 'To measure package performance', 'To clean the npm cache'], answer: 'To scan your project for security vulnerabilities'},
    { id: 263, testId: 9, difficulty: 'hard', question: "What is the `box-shadow` property in CSS?", type: 'mcq', options: ['It adds a shadow effect around an element\'s frame', 'It defines the shape of the box', 'It sets the background color of a box', 'It is for 3D transformations'], answer: 'It adds a shadow effect around an element\'s frame'},
    { id: 264, testId: 9, difficulty: 'expert', question: "What is a 'race condition'?", type: 'mcq', options: ['A performance bug in animations', 'A bug that occurs when the timing of events can lead to unexpected behavior', 'A network connection error', 'A CSS specificity conflict'], answer: 'A bug that occurs when the timing of events can lead to unexpected behavior'},
    { id: 265, testId: 9, difficulty: 'hard', question: "Which HTML element is used to specify a footer for a document or section?", type: 'mcq', options: ['<bottom>', '<footer>', '<section-footer>', '<foot>'], answer: '<footer>'},
    { id: 266, testId: 9, difficulty: 'hard', question: "What is the `target='_blank'` attribute used for on an `<a>` tag?", type: 'mcq', options: ['To open the link in the same tab', 'To open the link in a new tab or window', 'To prevent the link from being followed', 'To download the linked resource'], answer: 'To open the link in a new tab or window'},
    { id: 267, testId: 9, difficulty: 'hard', question: "What is `git`?", type: 'mcq', options: ['A programming language', 'A web server', 'A distributed version control system', 'A database'], answer: 'A distributed version control system'},

    // Test 10 (Expert - 50 questions: 30 MCQ, 20 Subjective)
    { id: 114, testId: 10, difficulty: 'expert', question: "What are some use cases for Web Workers?", type: 'subjective', answer: "Web Workers are used to run scripts in a background thread, separate from the main execution thread. This is ideal for long-running, computationally intensive tasks like complex calculations, processing large data sets, or cryptography, as it prevents the UI from freezing." },
    { id: 115, testId: 10, difficulty: 'expert', question: "What is the CSS Paint API?", type: 'subjective', answer: "The CSS Paint API (part of Houdini) allows developers to programmatically generate an image whenever a CSS property expects an image. This can be used to create custom patterns, gradients, and other visual effects directly in CSS with JavaScript logic." },
    { id: 117, testId: 10, difficulty: 'expert', question: "What is a 'BFF' (Backend for Frontend) pattern?", type: 'subjective', answer: "A BFF is a server-side component that is tailored to the needs of a specific frontend application. It acts as an intermediary between the client and downstream microservices, aggregating data and providing a simplified API for the frontend. This is useful when you have multiple client experiences (e.g., mobile, web) with different data requirements." },
    { id: 118, testId: 10, difficulty: 'expert', question: "What is `OffscreenCanvas`?", type: 'subjective', answer: "`OffscreenCanvas` is a browser API that provides a canvas that can be rendered off-screen, decoupled from the DOM. It allows for canvas rendering to be performed in a Web Worker, preventing heavy rendering tasks from blocking the main thread and making the UI more responsive." },
    { id: 119, testId: 10, difficulty: 'expert', question: "How can you mitigate 'Cumulative Layout Shift' (CLS)?", type: 'subjective', answer: "To mitigate CLS, you should: 1. Always include `width` and `height` size attributes on your images and video elements. 2. Reserve space for ads and embeds. 3. Avoid inserting new content above existing content. 4. Preload fonts to avoid layout shifts when they load." },
    { id: 120, testId: 10, difficulty: 'hard', question: "What is the `Same-Origin Policy` (SOP)?", type: 'subjective', answer: "The Same-Origin Policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin. It helps isolate potentially malicious documents, reducing possible attack vectors." },
    { id: 122, testId: 10, difficulty: 'expert', question: "What is a 'source map'?", type: 'subjective', answer: "A source map is a file that maps from the transformed source code (e.g., minified or transpiled) back to the original source code. This allows developers to debug their original code in the browser, even though the browser is executing the transformed version." },
    { id: 123, testId: 10, difficulty: 'hard', question: "What are CSS logical properties?", type: 'subjective', answer: "Logical properties (e.g., `margin-inline-start`, `padding-block-end`) are a module of CSS that provides properties for layout that are direction- and writing-mode-aware. Instead of `left` or `right`, you use `start` or `end`, which adapt to different writing modes like right-to-left languages." },
    { id: 124, testId: 10, difficulty: 'hard', question: "What is the difference between `let` and `const` in terms of memory?", type: 'subjective', answer: "There is no significant difference in terms of memory allocation. The difference is in assignment. `const` prevents re-assignment of the variable identifier. However, if the variable is an object or array, its contents can still be mutated." },
    { id: 125, testId: 10, difficulty: 'hard', question: "What are some techniques for accessibility (a11y) beyond `alt` text?", type: 'subjective', answer: "Other techniques include: using semantic HTML, ensuring proper color contrast, managing focus for keyboard navigation, using ARIA attributes to add context for screen readers, and providing text alternatives for all non-text content." },
    { id: 126, testId: 10, difficulty: 'expert', question: "What is 'Incremental Static Regeneration' (ISR) in Next.js?", type: 'subjective', answer: "ISR allows you to update static content after you’ve built your site. It enables you to use static-generation on a per-page basis, without needing to rebuild the entire site. With ISR, you can retain the benefits of static while scaling to millions of pages." },
    { id: 127, testId: 10, difficulty: 'hard', question: "What is `Object.freeze()`?", type: 'subjective', answer: "`Object.freeze()` freezes an object, preventing new properties from being added, existing properties from being removed, and existing properties, or their enumerability, configurability, or writability, from being changed. It creates a shallowly-frozen object." },
    { id: 128, testId: 10, difficulty: 'hard', question: "What is the `Paint Timing API`?", type: 'subjective', answer: "The Paint Timing API reports timing information about the paint operations during page load. It includes metrics like First Paint (FP) and First Contentful Paint (FCP), which are crucial for measuring and optimizing perceived load speed." },
    { id: 129, testId: 10, difficulty: 'expert', question: "How would you handle state for a complex form in React without a library?", type: 'subjective', answer: "You could use the `useReducer` hook. It's well-suited for managing complex state objects with multiple sub-values or when the next state depends on the previous one. You would define a reducer function to handle different actions (e.g., 'UPDATE_FIELD', 'VALIDATE_FORM') and dispatch these actions from your form." },
    { id: 131, testId: 10, difficulty: 'hard', question: "What is the `Temporal` proposal in JavaScript?", type: 'subjective', answer: "`Temporal` is a new, modern date/time API for JavaScript. It aims to fix the long-standing issues with the `Date` object by providing a simpler, more robust API with immutable objects for handling dates, times, and timezones." },
    { id: 132, testId: 10, difficulty: 'hard', question: "What are some CSS selectors that are bad for performance?", type: 'subjective', answer: "Overly complex selectors, especially those that are deeply nested or use the universal selector (`*`) without constraints, can be bad for performance. Browsers evaluate selectors from right to left, so a selector like `div * { color: red; }` can be very inefficient." },
    { id: 133, testId: 10, difficulty: 'expert', question: "What are 'React Server Components'?", type: 'subjective', answer: "React Server Components are a new type of component that runs exclusively on the server. They have no state and cannot use effects or browser-only APIs. Their main benefit is allowing direct access to backend resources (like a database) without creating an API endpoint, and they contribute zero to the client-side JavaScript bundle." },
    { id: 134, testId: 10, difficulty: 'hard', question: "What is a 'signed cookie'?", type: 'subjective', answer: "A signed cookie is a cookie that has a signature attached. The signature is created by the server using a secret key. This allows the server to verify that the cookie has not been tampered with by the client, though the data in the cookie is still readable." },
    { id: 135, testId: 10, difficulty: 'hard', question: "What is the `inert` attribute?", type: 'subjective', answer: "The `inert` global attribute is a boolean attribute that makes the browser 'ignore' the element. For example, it prevents click events and removes the element from the accessibility tree and tab order. It's useful for temporarily disabling parts of the UI, like a background page when a modal is open." },
    { id: 136, testId: 10, difficulty: 'expert', question: "How does a browser decide when to create a new layer for compositing?", type: 'subjective', answer: "Browsers promote certain elements to their own compositor layer to optimize rendering. This typically happens for elements with CSS properties like `transform: translateZ(0)` or `will-change`, elements with 3D transforms, `<video>` and `<canvas>` elements, and elements with CSS animations on `opacity` or `transform`." },
    { id: 268, testId: 10, difficulty: 'expert', question: "What is the primary purpose of a `webpack.config.js` file?", type: 'mcq', options: ['To define project dependencies', 'To configure how webpack bundles your project assets', 'To run tests', 'To set environment variables'], answer: 'To configure how webpack bundles your project assets'},
    { id: 269, testId: 10, difficulty: 'expert', question: "What is `QUIC`?", type: 'mcq', options: ['A transport layer network protocol used by HTTP/3', 'A CSS framework', 'A JavaScript runtime', 'A data query language'], answer: 'A transport layer network protocol used by HTTP/3'},
    { id: 270, testId: 10, difficulty: 'expert', question: "In React, what is the purpose of `forwardRef`?", type: 'mcq', options: ['To forward an event to a parent component', 'To let a parent component get a `ref` to a DOM element inside a child component', 'To create a reference to a function', 'To delay rendering a component'], answer: 'To let a parent component get a `ref` to a DOM element inside a child component'},
    { id: 1000, testId: 10, difficulty: 'expert', question: "What is 'Tail Call Optimization'?", type: 'mcq', options: ['An optimization to avoid growing the call stack for recursive functions that are in tail position', 'A way to optimize CSS selectors', 'A database indexing strategy', 'A network caching policy'], answer: 'An optimization to avoid growing the call stack for recursive functions that are in tail position' },
    { id: 1001, testId: 10, difficulty: 'expert', question: "Which of the following is a key principle of 'SOLID' design?", type: 'mcq', options: ['Single Responsibility Principle', 'Multiple Inheritance Principle', 'Global State Principle', 'Complex Interface Principle'], answer: 'Single Responsibility Principle' },
    { id: 1002, testId: 10, difficulty: 'expert', question: "What is a 'CORS preflight request'?", type: 'mcq', options: ['The main request sent to the server', 'An `OPTIONS` request sent before the actual request to check if the server understands the protocol and is configured to accept the request', 'A request that is sent after the main request for logging', 'A request to a different server'], answer: 'An `OPTIONS` request sent before the actual request to check if the server understands the protocol and is configured to accept the request' },
    { id: 1003, testId: 10, difficulty: 'expert', question: "What is the `Temporal Dead Zone` (TDZ)?", type: 'mcq', options: ['A period in code execution where `let` and `const` variables cannot be accessed', 'A network connectivity issue', 'A bug in the browser\'s date/time handling', 'An area of memory that is inaccessible'], answer: 'A period in code execution where `let` and `const` variables cannot be accessed' },
    { id: 1004, testId: 10, difficulty: 'expert', question: "What is the primary benefit of using a `Set` over an `Array` for storing unique values?", type: 'mcq', options: ['Sets are faster for checking if a value exists', 'Sets can store more data', 'Sets are mutable', 'Sets maintain insertion order'], answer: 'Sets are faster for checking if a value exists' },
    { id: 1005, testId: 10, difficulty: 'expert', question: "What is the `Performance API` in browsers used for?", type: 'mcq', options: ['To measure the performance of web pages with high-resolution timestamps', 'To optimize CSS animations', 'To manage CPU threads', 'To connect to performance monitoring services'], answer: 'To measure the performance of web pages with high-resolution timestamps' },
    { id: 1006, testId: 10, difficulty: 'expert', question: "What is a `Service Worker`?", type: 'mcq', options: ['A script that runs in the background, separate from a web page, enabling features like offline support and push notifications', 'A customer service chat bot', 'A server-side process', 'A React component for managing services'], answer: 'A script that runs in the background, separate from a web page, enabling features like offline support and push notifications' },
    { id: 1007, testId: 10, difficulty: 'expert', question: "Which of the following is true about `WebAssembly` (Wasm)?", type: 'mcq', options: ['It allows running code written in languages like C++ and Rust on the web at near-native speed', 'It is a replacement for JavaScript', 'It only works on the server', 'It is a new version of HTML'], answer: 'It allows running code written in languages like C++ and Rust on the web at near-native speed' },
    { id: 1008, testId: 10, difficulty: 'expert', question: "What is the main goal of the `useCallback` hook in React?", type: 'mcq', options: ['To memoize a callback function to prevent unnecessary re-renders of child components', 'To call a function after a component renders', 'To create a callback queue', 'To handle asynchronous callbacks'], answer: 'To memoize a callback function to prevent unnecessary re-renders of child components' },
    { id: 1009, testId: 10, difficulty: 'expert', question: "What is `HTTP Strict Transport Security` (HSTS)?", type: 'mcq', options: ['A security policy mechanism that helps to protect websites against protocol downgrade attacks and cookie hijacking', 'A way to encrypt all HTTP traffic', 'A firewall rule', 'A type of SSL certificate'], answer: 'A security policy mechanism that helps to protect websites against protocol downgrade attacks and cookie hijacking' },
    { id: 1010, testId: 10, difficulty: 'expert', question: "What is the `Canvas` API used for?", type: 'mcq', options: ['Drawing graphics, animations, and other visual images on the fly using JavaScript', 'Managing application layout', 'Handling user input', 'Storing data on the client'], answer: 'Drawing graphics, animations, and other visual images on the fly using JavaScript' },
    { id: 1011, testId: 10, difficulty: 'expert', question: "What is `CSS-in-JS`?", type: 'mcq', options: ['A pattern where CSS is composed using JavaScript', 'A JavaScript library for CSS animations', 'A new version of CSS', 'A CSS linter'], answer: 'A pattern where CSS is composed using JavaScript' },
    { id: 1012, testId: 10, difficulty: 'expert', question: "What is `Module Federation`?", type: 'mcq', options: ['A feature that allows a JavaScript application to dynamically load code from another application', 'A way to combine multiple JavaScript modules into one', 'A specification for ES Modules', 'A package manager'], answer: 'A feature that allows a JavaScript application to dynamically load code from another application' },
    { id: 1013, testId: 10, difficulty: 'expert', question: "Which statement about `WebSockets` is true?", type: 'mcq', options: ['It provides a full-duplex communication channel over a single, long-lived TCP connection', 'It is a request-response protocol like HTTP', 'It is only for sending data from client to server', 'It is a deprecated technology'], answer: 'It provides a full-duplex communication channel over a single, long-lived TCP connection' },
    { id: 1014, testId: 10, difficulty: 'expert', question: "What is the `will-change` CSS property used for?", type: 'mcq', options: ['To hint to browsers about what changes to an element to expect, so it can optimize ahead of time', 'To prevent an element from changing', 'To animate an element', 'To change the display property'], answer: 'To hint to browsers about what changes to an element to expect, so it can optimize ahead of time' },
    { id: 1015, testId: 10, difficulty: 'expert', question: "What is the primary role of a 'bundler' like Webpack or Rollup?", type: 'mcq', options: ['To take your JavaScript and its dependencies and combine them into a few files for the browser', 'To run your JavaScript code', 'To check for code quality', 'To install dependencies'], answer: 'To take your JavaScript and its dependencies and combine them into a few files for the browser' },
    { id: 1016, testId: 10, difficulty: 'expert', question: "What problem does `Promise.allSettled()` solve?", type: 'mcq', options: ['It waits for all promises to settle (either fulfilled or rejected), returning an array of outcomes', 'It rejects as soon as one promise rejects', 'It only waits for promises to be fulfilled', 'It is an alias for `Promise.all`'], answer: 'It waits for all promises to settle (either fulfilled or rejected), returning an array of outcomes' },
    { id: 1017, testId: 10, difficulty: 'expert', question: "What is 'prop drilling' in React?", type: 'mcq', options: ['The process of passing props down through multiple layers of nested components', 'A performance optimization', 'A state management library', 'A way to define prop types'], answer: 'The process of passing props down through multiple layers of nested components' },
  ],
  backend: [
    // Test 1 (Easy - 5 questions: 3 MCQ, 2 Subjective)
    { id: 301, testId: 1, difficulty: 'easy', question: "What does API stand for?", type: 'mcq', options: ['Application Programming Interface', 'Automated Program Interaction', 'Algorithmic Protocol Interface', 'Application Process Integration'], answer: 'Application Programming Interface'},
    { id: 302, testId: 1, difficulty: 'easy', question: "Which HTTP method is typically used for creating a new resource on a server?", type: 'mcq', options: ['POST', 'GET', 'DELETE', 'PUT'], answer: 'POST'},
    { id: 303, testId: 1, difficulty: 'easy', question: "Which HTTP status code means 'OK'?", type: 'mcq', options: ['200', '500', '404', '301'], answer: '200'},
    { id: 304, testId: 1, difficulty: 'easy', question: "What is a database?", type: 'subjective', answer: "A database is an organized collection of structured information, or data, typically stored electronically in a computer system, designed for efficient storage, retrieval, and management."},
    { id: 305, testId: 1, difficulty: 'easy', question: "What is the purpose of an index in a database?", type: 'subjective', answer: "A database index is a data structure that improves the speed of data retrieval operations on a database table. It works like an index in a book, allowing the database to find data without scanning the entire table."},

    // Test 2 (Easy-Medium - 10 questions: 6 MCQ, 4 Subjective)
    { id: 306, testId: 2, difficulty: 'easy', question: "Which of the following is NOT a valid HTTP verb?", type: 'mcq', options: ['GET', 'POST', 'FETCH', 'PATCH'], answer: 'FETCH' },
    { id: 307, testId: 2, difficulty: 'easy', question: "Which component is responsible for mapping a URL to a specific function in a backend framework?", type: 'mcq', options: ['Middleware', 'Router', 'Template Engine', 'ORM'], answer: 'Router'},
    { id: 311, testId: 2, difficulty: 'medium', question: "What is hashing in the context of password security?", type: 'mcq', options: ["A two-way encryption method", "A way to compress data", "A one-way function to create a unique, fixed-size string", "A method for indexing databases"], answer: "A one-way function to create a unique, fixed-size string"},
    { id: 312, testId: 2, difficulty: 'medium', question: "What does 'stateless' mean in the context of REST APIs?", type: 'mcq', options: ["The server stores the client's session data", "The client stores all the application state", "The server does not store any client context between requests", "The API can only be used for static content"], answer: "The server does not store any client context between requests"},
    { id: 314, testId: 2, difficulty: 'medium', question: "What is an ORM?", type: 'mcq', options: ["A database management system", "A programming language", "A technique for converting data between incompatible type systems", "A type of web server"], answer: "A technique for converting data between incompatible type systems"},
    { id: 315, testId: 2, difficulty: 'medium', question: "What is the N+1 problem in ORMs?", type: 'mcq', options: ["A security vulnerability", "An inefficient database query pattern", "A type of network error", "A memory leak issue"], answer: "An inefficient database query pattern"},
    { id: 308, testId: 2, difficulty: 'medium', question: "What is the difference between SQL and NoSQL databases?", type: 'subjective', answer: "SQL databases are relational (data stored in tables), use a predefined schema, and scale vertically. NoSQL databases are non-relational (e.g., document, key-value), have a dynamic schema, and scale horizontally."},
    { id: 309, testId: 2, difficulty: 'medium', question: "What is REST?", type: 'subjective', answer: "REST (Representational State Transfer) is an architectural style for designing networked applications. It relies on a stateless, client-server communication protocol, most commonly HTTP, and uses standard HTTP methods."},
    { id: 310, testId: 2, difficulty: 'medium', question: "What is middleware in the context of a backend framework like Express.js?", type: 'subjective', answer: "Middleware functions have access to the request (req) and response (res) objects, and the next middleware function. They can execute code, modify req/res objects, end the request-response cycle, or pass control to the next middleware."},
    { id: 313, testId: 2, difficulty: 'medium', question: "What is a 'race condition'?", type: 'subjective', answer: "A race condition occurs when a system's behavior depends on the sequence or timing of uncontrollable events. It becomes a bug when events do not happen in the order the programmer intended, often in concurrent or multi-threaded environments."},

    // Test 3 (Medium - 15 questions: 9 MCQ, 6 Subjective)
    { id: 317, testId: 3, difficulty: 'medium', question: "What are the main components of a JWT?", type: 'mcq', options: ['Header, Payload, Signature', 'Header, Body, Footer', 'Key, Value, Secret', 'Issuer, Subject, Expiry'], answer: 'Header, Payload, Signature' },
    { id: 321, testId: 3, difficulty: 'medium', question: "Which of the following is a message broker?", type: 'mcq', options: ['Redis', 'PostgreSQL', 'RabbitMQ', 'Nginx'], answer: 'RabbitMQ' },
    { id: 324, testId: 3, difficulty: 'medium', question: "What is 'salting' a password?", type: 'mcq', options: ['Encrypting the password', 'Adding a random string to a password before hashing it', 'Compressing the password', 'Storing the password in plain text'], answer: 'Adding a random string to a password before hashing it' },
    { id: 327, testId: 3, difficulty: 'medium', question: "What is a 'foreign key' in a relational database?", type: 'mcq', options: ['The primary key of another table', 'A key used for encryption', 'A unique identifier for a row', 'An index for faster queries'], answer: 'The primary key of another table' },
    { id: 330, testId: 3, difficulty: 'medium', question: "What is the purpose of an API gateway?", type: 'mcq', options: ['To connect to a database', 'To act as a single entry point for all client requests to a backend service', 'To serve static files', 'To compile code'], answer: 'To act as a single entry point for all client requests to a backend service' },
    { id: 356, testId: 3, difficulty: 'medium', question: "Which of the following is NOT a relational database?", type: 'mcq', options: ['MySQL', 'PostgreSQL', 'MongoDB', 'SQLite'], answer: 'MongoDB'},
    { id: 360, testId: 3, difficulty: 'hard', question: "What is a 'WebHook'?", type: 'mcq', options: ['A React hook for fetching web data', 'A method for an app to provide other applications with real-time information', 'A type of fishing lure', 'A security vulnerability'], answer: 'A method for an app to provide other applications with real-time information'},
    { id: 366, testId: 3, difficulty: 'medium', question: "What is `ping` command used for?", type: 'mcq', options: ["To test the reachability of a host on an IP network", "To send an email", "To download a file", "To shut down a server"], answer: "To test the reachability of a host on an IP network" },
    { id: 371, testId: 3, difficulty: 'medium', question: "What does the `git clone` command do?", type: 'mcq', options: ['Creates a new branch', 'Creates a copy of an existing Git repository', 'Commits changes', 'Merges branches'], answer: 'Creates a copy of an existing Git repository' },
    { id: 316, testId: 3, difficulty: 'medium', question: "What is the purpose of JWT (JSON Web Token)?", type: 'subjective', answer: "JWTs are used to securely transmit information between parties as a JSON object. They are commonly used for authentication and authorization, allowing the server to verify that the client has permission to access certain resources." },
    { id: 318, testId: 3, difficulty: 'medium', question: "What is caching and why is it important in backend systems?", type: 'subjective', answer: "Caching is the process of storing copies of files or data in a temporary storage location (a cache) so that they can be accessed more quickly. It's important for improving performance, reducing latency, and decreasing the load on the backend servers and databases." },
    { id: 319, testId: 3, difficulty: 'medium', question: "What is the difference between authentication and authorization?", type: 'subjective', answer: "Authentication is the process of verifying who a user is. Authorization is the process of verifying what a user has permission to do." },
    { id: 320, testId: 3, difficulty: 'medium', question: "What is a 'connection pool' in the context of databases?", type: 'subjective', answer: "A connection pool is a cache of database connections maintained so that the connections can be reused when future requests to the database are required. It improves performance by avoiding the overhead of establishing a new connection for every request." },
    { id: 322, testId: 3, difficulty: 'medium', question: "What is the role of a reverse proxy?", type: 'subjective', answer: "A reverse proxy is a server that sits in front of one or more web servers, intercepting requests from clients. It is used for load balancing, security (hiding the identity of backend servers), caching, and SSL termination." },
    { id: 323, testId: 3, difficulty: 'medium', question: "What are ACID properties in a database transaction?", type: 'subjective', answer: "ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties that guarantee that database transactions are processed reliably. Atomicity: All or nothing. Consistency: The database remains in a valid state. Isolation: Concurrent transactions do not affect each other. Durability: Committed transactions are permanent." },
    
    // Test 4 (Medium - 20 questions: 12 MCQ, 8 Subjective)
    { id: 334, testId: 4, difficulty: 'medium', question: "What are 'microservices'?", type: 'mcq', options: ['A type of database', 'A software development technique that structures an application as a collection of loosely coupled services', 'A frontend framework', 'A deployment strategy'], answer: 'A software development technique that structures an application as a collection of loosely coupled services' },
    { id: 337, testId: 4, difficulty: 'medium', question: "What is 'gRPC'?", type: 'mcq', options: ['A database query language', 'A high-performance, open-source universal RPC framework', 'A JavaScript library', 'A CSS preprocessor'], answer: 'A high-performance, open-source universal RPC framework' },
    { id: 341, testId: 4, difficulty: 'medium', question: "What is a 'singleton' pattern?", type: 'mcq', options: ['A design pattern that restricts the instantiation of a class to a single object', 'A way to handle single-threaded applications', 'A database indexing strategy', 'A network protocol'], answer: 'A design pattern that restricts the instantiation of a class to a single object' },
    { id: 347, testId: 4, difficulty: 'hard', question: "What is 'backpressure' in a streaming system?", type: 'mcq', options: ['A type of network error', 'A mechanism to prevent a fast data producer from overwhelming a slower consumer', 'The pressure in a database connection pool', 'A data compression technique'], answer: 'A mechanism to prevent a fast data producer from overwhelming a slower consumer' },
    { id: 1018, testId: 4, difficulty: 'medium', question: "Which HTTP status code represents 'Not Found'?", type: 'mcq', options: ['200', '404', '500', '302'], answer: '404'},
    { id: 1019, testId: 4, difficulty: 'medium', question: "What is the primary purpose of a 'linter'?", type: 'mcq', options: ['To compile code', 'To bundle assets', 'To enforce code quality and style conventions', 'To run tests'], answer: 'To enforce code quality and style conventions'},
    { id: 1020, testId: 4, difficulty: 'hard', question: "Which of these is a key-value store?", type: 'mcq', options: ['PostgreSQL', 'Redis', 'MySQL', 'Oracle'], answer: 'Redis'},
    { id: 1021, testId: 4, difficulty: 'hard', question: "In a microservices architecture, what is 'service discovery'?", type: 'mcq', options: ['A way for services to find and communicate with each other dynamically', 'A debugging tool', 'A manual configuration process', 'A version control system'], answer: 'A way for services to find and communicate with each other dynamically'},
    { id: 1022, testId: 4, difficulty: 'medium', question: "What type of database model does MongoDB use?", type: 'mcq', options: ['Relational', 'Document', 'Graph', 'Columnar'], answer: 'Document'},
    { id: 1023, testId: 4, difficulty: 'medium', question: "What is the default port for HTTP?", type: 'mcq', options: ['80', '443', '8080', '22'], answer: '80'},
    { id: 1024, testId: 4, difficulty: 'hard', question: "What is a 'man-in-the-middle' (MITM) attack?", type: 'mcq', options: ['An attack where the attacker secretly relays and possibly alters the communication between two parties', 'A denial-of-service attack', 'A database injection attack', 'A form of malware'], answer: 'An attack where the attacker secretly relays and possibly alters the communication between two parties'},
    { id: 1025, testId: 4, difficulty: 'medium', question: "Which layer of the OSI model does HTTP operate on?", type: 'mcq', options: ['Physical Layer', 'Transport Layer', 'Network Layer', 'Application Layer'], answer: 'Application Layer'},
    { id: 331, testId: 4, difficulty: 'medium', question: "What is GraphQL and how does it differ from REST?", type: 'subjective', answer: "GraphQL is a query language for APIs. Unlike REST, which has multiple endpoints that return fixed data structures, GraphQL has a single endpoint and allows the client to request exactly the data it needs, preventing over-fetching and under-fetching." },
    { id: 332, testId: 4, difficulty: 'medium', question: "What is vertical vs. horizontal scaling?", type: 'subjective', answer: "Vertical scaling (scaling up) means adding more resources (e.g., CPU, RAM) to an existing server. Horizontal scaling (scaling out) means adding more servers to a pool of resources." },
    { id: 333, testId: 4, difficulty: 'medium', question: "What is a 'database transaction'?", type: 'subjective', answer: "A database transaction is a sequence of operations performed as a single logical unit of work. All operations in a transaction must succeed for the transaction to be committed; otherwise, it is rolled back." },
    { id: 335, testId: 4, difficulty: 'medium', question: "What is a 'CAP theorem'?", type: 'subjective', answer: "The CAP theorem states that it is impossible for a distributed data store to simultaneously provide more than two out of the following three guarantees: Consistency, Availability, and Partition tolerance." },
    { id: 336, testId: 4, difficulty: 'medium', question: "Explain what a 'load balancer' does.", type: 'subjective', answer: "A load balancer distributes incoming network traffic across multiple servers to ensure no single server becomes a bottleneck. This improves application responsiveness, availability, and reliability." },
    { id: 338, testId: 4, difficulty: 'medium', question: "What is the difference between a process and a thread?", type: 'subjective', answer: "A process is an instance of a program running in its own memory space. A thread is the smallest unit of execution within a process. Multiple threads can run within a single process and share its memory space." },
    { id: 339, testId: 4, difficulty: 'medium', question: "What is 'event sourcing'?", type: 'subjective', answer: "Event sourcing is a design pattern in which all changes to an application's state are stored as a sequence of events. The current state can be reconstructed by replaying the events." },
    { id: 340, testId: 4, difficulty: 'medium', question: "What is 'CQRS' (Command Query Responsibility Segregation)?", type: 'subjective', answer: "CQRS is a pattern that separates read and write operations for a data store. The 'Command' model is used for writes (updates), and the 'Query' model is used for reads." },
    
    // Test 5 (Medium-Hard - 25 questions: 15 MCQ, 10 Subjective)
    { id: 342, testId: 5, difficulty: 'medium', question: "What is 'dependency injection'?", type: 'subjective', answer: "Dependency Injection (DI) is a design pattern in which a component's dependencies are provided to it from an external source, rather than being created by the component itself. This promotes loose coupling and makes components more reusable and testable." },
    { id: 343, testId: 5, difficulty: 'medium', question: "What is 'Infrastructure as Code' (IaC)?", type: 'subjective', answer: "IaC is the practice of managing and provisioning computing infrastructure through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools. Tools like Terraform and CloudFormation are used for IaC." },
    { id: 344, testId: 5, difficulty: 'hard', question: "Explain how database sharding works.", type: 'subjective', answer: "Database sharding is a type of horizontal partitioning that separates one large database into multiple smaller, faster, more easily managed parts called data shards. The logic for distributing data across shards (the shard key) is critical to its design." },
    { id: 345, testId: 5, difficulty: 'hard', question: "What are the trade-offs of using a monolithic architecture vs. a microservices architecture?", type: 'subjective', answer: "Monoliths are simpler to develop, test, and deploy initially, but can become complex and difficult to scale. Microservices are more scalable, allow for technological diversity, and enable independent deployments, but introduce complexity in terms of deployment, monitoring, and inter-service communication." },
    { id: 346, testId: 5, difficulty: 'hard', question: "What is a 'distributed transaction'?", type: 'subjective', answer: "A distributed transaction is a transaction that involves multiple, separate systems or databases. Ensuring ACID properties across a distributed transaction is complex and often requires a two-phase commit protocol." },
    { id: 348, testId: 5, difficulty: 'hard', question: "How does a 'consistent hashing' algorithm work?", type: 'subjective', answer: "Consistent hashing is a special kind of hashing such that when a hash table is resized, only K/n keys need to be remapped on average, where K is the number of keys and n is the number of slots. It's commonly used in distributed systems and load balancers to minimize data movement when nodes are added or removed." },
    { id: 349, testId: 5, difficulty: 'hard', question: "What is the 'saga' pattern?", type: 'subjective', answer: "The saga pattern is a way to manage data consistency across microservices in a distributed transaction. It's a sequence of local transactions where each local transaction updates the database and publishes an event or message to trigger the next local transaction in the saga. If a transaction fails, compensating transactions are executed to undo the preceding work." },
    { id: 350, testId: 5, difficulty: 'hard', question: "What is a 'circuit breaker' pattern?", type: 'subjective', answer: "The circuit breaker pattern is used to prevent an application from repeatedly trying to execute an operation that is likely to fail. After a specified number of failures, the circuit 'opens' and subsequent calls fail immediately. After a timeout, the circuit goes into a 'half-open' state to test if the underlying operation is available again." },
    { id: 351, testId: 5, difficulty: 'medium', question: "What is a 'rate limiter' and how might you implement one?", type: 'subjective', answer: "A rate limiter controls the rate of traffic sent or received by a network interface. Common algorithms for implementation include Token Bucket, Leaky Bucket, Fixed Window Counter, and Sliding Window Log. A simple implementation could use an in-memory store like Redis to track request counts per user/IP within a time window." },
    { id: 352, testId: 5, difficulty: 'hard', question: "What is the difference between concurrency and parallelism?", type: 'subjective', answer: "Concurrency means multiple tasks can run in overlapping time periods, but not necessarily simultaneously (e.g., on a single-core CPU via context switching). Parallelism means multiple tasks are executed at the exact same time (e.g., on a multi-core CPU)." },
    { id: 1026, testId: 5, difficulty: 'medium', question: "What is the role of a web server like Nginx or Apache?", type: 'mcq', options: ['To run JavaScript code', 'To serve static content and act as a reverse proxy', 'To manage databases', 'To write application logic'], answer: 'To serve static content and act as a reverse proxy'},
    { id: 1027, testId: 5, difficulty: 'hard', question: "What is a 'cache invalidation' strategy?", type: 'mcq', options: ['A way to clear the entire cache', 'A process that determines when a piece of data in a cache is no longer valid and should be refreshed', 'A security measure to prevent cache poisoning', 'A type of compression'], answer: 'A process that determines when a piece of data in a cache is no longer valid and should be refreshed'},
    { id: 1028, testId: 5, difficulty: 'hard', question: "What is 'idempotency' in the context of HTTP methods?", type: 'mcq', options: ['An operation that can be performed multiple times without changing the result beyond the initial application', 'An operation that is very fast', 'An operation that returns a unique ID', 'An operation that is not secure'], answer: 'An operation that can be performed multiple times without changing the result beyond the initial application'},
    { id: 1029, testId: 5, difficulty: 'medium', question: "Which of the following is a primary benefit of using an Object-Relational Mapper (ORM)?", type: 'mcq', options: ['It is always faster than writing raw SQL', 'It allows developers to work with databases using familiar object-oriented paradigms', 'It eliminates the need for database indexes', 'It provides a graphical user interface for the database'], answer: 'It allows developers to work with databases using familiar object-oriented paradigms'},
    { id: 1030, testId: 5, difficulty: 'medium', question: "What does `ssh` stand for?", type: 'mcq', options: ['Secure Shell', 'Secure Socket Host', 'System Shell', 'Static Site Host'], answer: 'Secure Shell'},
    { id: 1031, testId: 5, difficulty: 'hard', question: "What is a 'thread pool'?", type: 'mcq', options: ['A collection of threads used for database connections', 'A collection of pre-instantiated, idle threads that stand ready to be given work', 'A memory area shared between threads', 'A way to visualize threads'], answer: 'A collection of pre-instantiated, idle threads that stand ready to be given work'},
    { id: 1032, testId: 5, difficulty: 'medium', question: "What is the purpose of a `finally` block in a `try-catch` statement?", type: 'mcq', options: ['To execute code only if an exception is thrown', 'To execute code regardless of whether an exception is thrown or not', 'To execute code only if no exception is thrown', 'To declare final variables'], answer: 'To execute code regardless of whether an exception is thrown or not'},
    { id: 1033, testId: 5, difficulty: 'medium', question: "What is the purpose of `bcrypt`?", type: 'mcq', options: ['A database technology', 'A password-hashing function designed to be slow and computationally intensive', 'A file compression algorithm', 'A network protocol'], answer: 'A password-hashing function designed to be slow and computationally intensive'},
    { id: 1034, testId: 5, difficulty: 'hard', question: "What is 'Server-Sent Events' (SSE)?", type: 'mcq', options: ['A technology that enables a browser to receive automatic updates from a server via an HTTP connection', 'A type of WebSocket', 'A client-side event system', 'A logging framework'], answer: 'A technology that enables a browser to receive automatic updates from a server via an HTTP connection'},
    { id: 1035, testId: 5, difficulty: 'medium', question: "What is `localhost`?", type: 'mcq', options: ['A remote server', 'A hostname that refers to the current computer used to access it', 'A DNS provider', 'A web hosting service'], answer: 'A hostname that refers to the current computer used to access it'},
    { id: 1036, testId: 5, difficulty: 'medium', question: "Which data format is most commonly used for REST APIs?", type: 'mcq', options: ['XML', 'JSON', 'HTML', 'CSV'], answer: 'JSON'},
    { id: 1037, testId: 5, difficulty: 'hard', question: "What is a 'mutex' (mutual exclusion)?", type: 'mcq', options: ['A programming language construct that prevents a piece of code from being executed by more than one thread at a time', 'A way to mutate data', 'A type of database lock', 'A network security protocol'], answer: 'A programming language construct that prevents a piece of code from being executed by more than one thread at a time'},
    { id: 1038, testId: 5, difficulty: 'medium', question: "What is the purpose of a 'unit test'?", type: 'mcq', options: ['To test the entire application', 'To test individual components or functions in isolation', 'To test the user interface', 'To test performance'], answer: 'To test individual components or functions in isolation'},
    { id: 1039, testId: 5, difficulty: 'hard', question: "What is 'polymorphism' in object-oriented programming?", type: 'mcq', options: ['The ability of an object to take on many forms', 'The process of hiding implementation details', 'The ability of a class to inherit properties from another class', 'A way to define constants'], answer: 'The ability of an object to take on many forms'},
    { id: 1040, testId: 5, difficulty: 'medium', question: "Which of the following is an example of a PaaS (Platform as a Service)?", type: 'mcq', options: ['AWS EC2', 'Heroku', 'DigitalOcean Droplet', 'Google Drive'], answer: 'Heroku'},

    // Test 6 (Hard - 30 questions: 18 MCQ, 12 Subjective)
    { id: 353, testId: 6, difficulty: 'hard', question: "What are different database isolation levels?", type: 'subjective', answer: "Common isolation levels are: Read Uncommitted (dirty reads), Read Committed (no dirty reads), Repeatable Read (no dirty or non-repeatable reads), and Serializable (no dirty, non-repeatable, or phantom reads). Higher isolation levels provide more consistency but reduce concurrency." },
    { id: 354, testId: 6, difficulty: 'hard', question: "What is a 'gossip protocol'?", type: 'subjective', answer: "A gossip protocol is a procedure or process of computer peer-to-peer communication that is based on the way epidemics spread. It's used to propagate information through a distributed system in a decentralized and fault-tolerant way. Systems like Apache Cassandra use it for node discovery and status updates." },
    { id: 355, testId: 6, difficulty: 'hard', question: "What is 'zero-downtime deployment' and how can it be achieved?", type: 'subjective', answer: "Zero-downtime deployment is the process of releasing a new version of an application without any user-visible downtime. Techniques to achieve this include blue-green deployment (switching traffic between two identical environments) and canary releasing (gradually rolling out the change to a small subset of users)." },
    { id: 357, testId: 6, difficulty: 'hard', question: "What is a 'deadlock' in a database?", type: 'subjective', answer: 'A deadlock is a situation where two or more transactions are waiting for each other to release locks. For example, Transaction A locks resource 1 and wants to lock resource 2, while Transaction B has locked resource 2 and wants to lock resource 1. The database must detect this and abort one of the transactions.'},
    { id: 358, testId: 6, difficulty: 'medium', question: "What is the purpose of the `Dockerfile`?", type: 'subjective', answer: 'A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. `docker build` uses this file to automate the process of creating a container image.'},
    { id: 359, testId: 6, difficulty: 'medium', question: "What does 'SOLID' stand for in software design?", type: 'subjective', answer: 'SOLID is an acronym for five design principles: Single Responsibility Principle, Open/Closed Principle, Liskov Substitution Principle, Interface Segregation Principle, and Dependency Inversion Principle. They are intended to make software designs more understandable, flexible, and maintainable.'},
    { id: 361, testId: 6, difficulty: 'hard', question: "What is 'serverless computing'?", type: 'subjective', answer: "Serverless computing is a cloud computing execution model in which the cloud provider runs the server and dynamically manages the allocation of machine resources. Pricing is based on the actual amount of resources consumed by an application, rather than on pre-purchased units of capacity. AWS Lambda and Google Cloud Functions are examples." },
    { id: 362, testId: 6, difficulty: 'medium', question: "What is a 'primary key' in a database table?", type: 'subjective', answer: "A primary key is a constraint that uniquely identifies each record in a table. Primary keys must contain unique values, and cannot contain NULL values." },
    { id: 363, testId: 6, difficulty: 'medium', question: "What is 'YAML'?", type: 'subjective', answer: 'YAML (YAML Ain\'t Markup Language) is a human-readable data-serialization language. It is commonly used for configuration files and in applications where data is being stored or transmitted.' },
    { id: 364, testId: 6, difficulty: 'hard', question: "What are the benefits of using a message queue?", type: 'subjective', answer: "Benefits include: Decoupling services, so that the producer and consumer do not need to be running at the same time; Asynchronous processing, allowing a producer to send a message and continue its work; and load leveling, by absorbing spikes in traffic and feeding messages to consumers at a manageable rate." },
    { id: 365, testId: 6, difficulty: 'medium', question: "What is a `cron job`?", type: 'subjective', answer: "A cron job is a time-based job scheduler in Unix-like computer operating systems. Users who set up and maintain software environments use cron to schedule jobs (commands or shell scripts) to run periodically at fixed times, dates, or intervals." },
    { id: 367, testId: 6, difficulty: 'hard', question: "What is 'long polling'?", type: 'subjective', answer: "Long polling is a technique where the client makes a request to the server, and the server holds the connection open until it has new data to send. Once it sends a response, the client immediately sends another request. It's a way to simulate a push mechanism from server to client." },
    { id: 1041, testId: 6, difficulty: 'hard', question: "What is a 'sidecar' pattern in the context of containers?", type: 'mcq', options: ['A pattern where a secondary container runs alongside the main application container to provide supporting features', 'A way to run two main applications in one container', 'A debugging technique', 'A network routing pattern'], answer: 'A pattern where a secondary container runs alongside the main application container to provide supporting features'},
    { id: 1042, testId: 6, difficulty: 'hard', question: "What is 'sharding'?", type: 'mcq', options: ['A type of database indexing', 'The process of breaking up a large database into smaller, more manageable pieces called shards', 'A security vulnerability', 'A data encryption technique'], answer: 'The process of breaking up a large database into smaller, more manageable pieces called shards'},
    { id: 1043, testId: 6, difficulty: 'hard', question: "Which of the following is a primary characteristic of a 'stateless' application?", type: 'mcq', options: ['It stores session data on the server', 'It does not store any client session data on the server', 'It requires a database', 'It cannot be scaled'], answer: 'It does not store any client session data on the server'},
    { id: 1044, testId: 6, difficulty: 'hard', question: "What does 'git cherry-pick' do?", type: 'mcq', options: ['Deletes a commit', 'Applies the changes introduced by some existing commits onto the current branch', 'Merges two branches', 'Reverts a commit'], answer: 'Applies the changes introduced by some existing commits onto the current branch'},
    { id: 1045, testId: 6, difficulty: 'hard', question: "What is a 'lambda' function in Python?", type: 'mcq', options: ['A standard named function', 'A small anonymous function defined with the `lambda` keyword', 'A function that runs on AWS Lambda', 'A recursive function'], answer: 'A small anonymous function defined with the `lambda` keyword'},
    { id: 1046, testId: 6, difficulty: 'hard', question: "What is the purpose of `super()` in Python?", type: 'mcq', options: ['To call the constructor of a base class', 'To define a superclass', 'To make a method static', 'To delete an object'], answer: 'To call the constructor of a base class'},
    { id: 1047, testId: 6, difficulty: 'hard', question: "In a relational database, what is a 'JOIN' clause used for?", type: 'mcq', options: ['To create a new table', 'To combine rows from two or more tables based on a related column between them', 'To delete data from a table', 'To filter results'], answer: 'To combine rows from two or more tables based on a related column between them'},
    { id: 1048, testId: 6, difficulty: 'expert', question: "What is the 'two-phase commit' protocol (2PC)?", type: 'mcq', options: ['A protocol for merging code', 'A distributed algorithm that lets all nodes in a distributed system agree to commit a transaction', 'A security handshake', 'A deployment strategy'], answer: 'A distributed algorithm that lets all nodes in a distributed system agree to commit a transaction'},
    { id: 1049, testId: 6, difficulty: 'hard', question: "What is a `BlockingQueue` in Java?", type: 'mcq', options: ['A queue that blocks all operations', 'A queue that blocks when you try to dequeue from an empty queue, or enqueue to a full queue', 'A non-blocking data structure', 'A type of list'], answer: 'A queue that blocks when you try to dequeue from an empty queue, or enqueue to a full queue'},
    { id: 1050, testId: 6, difficulty: 'medium', question: "What is the `@Override` annotation in Java for?", type: 'mcq', options: ['To create a new method', 'To inform the compiler that the element is meant to override an element declared in a superclass', 'To overload a method', 'To make a method final'], answer: 'To inform the compiler that the element is meant to override an element declared in a superclass'},
    { id: 1051, testId: 6, difficulty: 'hard', question: "What is 'garbage collection'?", type: 'mcq', options: ['A manual process of deleting unused objects', 'A form of automatic memory management that reclaims memory occupied by objects that are no longer in use', 'A tool for cleaning up old files', 'A database maintenance task'], answer: 'A form of automatic memory management that reclaims memory occupied by objects that are no longer in use'},
    { id: 1052, testId: 6, difficulty: 'hard', question: "Which is a common use case for WebSockets?", type: 'mcq', options: ['Serving static web pages', 'Real-time applications like chat or live sports updates', 'Sending emails', 'Storing user data'], answer: 'Real-time applications like chat or live sports updates'},
    { id: 1053, testId: 6, difficulty: 'hard', question: "What is the purpose of the `async`/`await` syntax in C#?", type: 'mcq', options: ['To make code run faster', 'To provide a simplified way to perform asynchronous programming without complex callbacks', 'To run code on a separate thread', 'To handle exceptions'], answer: 'To provide a simplified way to perform asynchronous programming without complex callbacks'},
    { id: 1054, testId: 6, difficulty: 'hard', question: "What is 'SQL Injection'?", type: 'mcq', options: ['A type of database query', 'A code injection technique that might destroy your database', 'A way to speed up queries', 'A feature of ORMs'], answer: 'A code injection technique that might destroy your database'},
    { id: 1055, testId: 6, difficulty: 'hard', question: "What is 'publish-subscribe' (pub/sub) pattern?", type: 'mcq', options: ['A design pattern for user interfaces', 'A messaging pattern where senders (publishers) do not programmatically send messages directly to specific receivers (subscribers)', 'A database schema', 'A network routing algorithm'], answer: 'A messaging pattern where senders (publishers) do not programmatically send messages directly to specific receivers (subscribers)'},
    { id: 1056, testId: 6, difficulty: 'expert', question: "What is the 'Raft Consensus Algorithm'?", type: 'mcq', options: ['A sorting algorithm', 'An algorithm for managing a replicated log to keep state machines consistent in a distributed system', 'A pathfinding algorithm', 'A data compression algorithm'], answer: 'An algorithm for managing a replicated log to keep state machines consistent in a distributed system'},
    { id: 1057, testId: 6, difficulty: 'medium', question: "What is `Node.js`?", type: 'mcq', options: ['A frontend framework', 'A JavaScript runtime built on Chrome\'s V8 JavaScript engine', 'A database', 'A web server'], answer: 'A JavaScript runtime built on Chrome\'s V8 JavaScript engine'},
    { id: 1058, testId: 6, difficulty: 'hard', question: "What is a 'process manager' like PM2 used for?", type: 'mcq', options: ['To manage project dependencies', 'To keep a Node.js application running continuously (e.g., restarting it if it crashes)', 'To bundle JavaScript code', 'To manage database migrations'], answer: 'To keep a Node.js application running continuously (e.g., restarting it if it crashes)'},

    // Test 7 (Hard - 35 questions: 21 MCQ, 14 Subjective)
    { id: 368, testId: 7, difficulty: 'medium', question: "What is the role of `npm` or `yarn` in a Node.js project?", type: 'subjective', answer: "They are package managers for JavaScript. They allow developers to discover, share, and install reusable code packages (dependencies) from a central repository. They also manage project scripts and versioning." },
    { id: 369, testId: 7, difficulty: 'medium', question: "What is the `Content-Type` header in an HTTP response?", type: 'subjective', answer: "The `Content-Type` header is used to indicate the media type of the resource. For example, a response of `application/json` tells the client that the body of the response is a JSON string." },
    { id: 370, testId: 7, difficulty: 'hard', question: "What is 'database normalization'?", type: 'subjective', answer: "Database normalization is the process of organizing the columns and tables of a relational database to minimize data redundancy. It involves dividing larger tables into smaller, well-structured tables and defining relationships between them." },
    { id: 372, testId: 7, difficulty: 'medium', question: "What is 'Big O notation'?", type: 'subjective', answer: "Big O notation is a mathematical notation that describes the limiting behavior of a function when the argument tends towards a particular value or infinity. In computer science, it is used to classify algorithms according to how their run time or space requirements grow as the input size grows." },
    { id: 373, testId: 7, difficulty: 'medium', question: "What is a 'stack trace'?", type: 'subjective', answer: "A stack trace is a report of the active stack frames at a certain point in time during the execution of a program. It's commonly used during debugging to find the source of an error." },
    { id: 374, testId: 7, difficulty: 'hard', question: "What is a 'memory leak' in a backend application?", type: 'subjective', answer: "A memory leak occurs when a program allocates memory but loses the ability to release it, leading to a gradual exhaustion of available memory. Common causes include unclosed connections, unterminated child processes, or objects that are unintentionally kept in memory." },
    { id: 375, testId: 7, difficulty: 'hard', question: "What is 'failover'?", type: 'subjective', answer: "Failover is the process of automatically switching to a redundant or standby server, system, or network upon the failure or abnormal termination of the previously active application, server, system, or network." },
    { id: 1059, testId: 7, difficulty: 'hard', question: "Describe the 'Repository' design pattern.", type: 'subjective', answer: 'The Repository pattern mediates between the domain and data mapping layers using a collection-like interface for accessing domain objects. It encapsulates the logic required to access data sources, providing a cleaner separation of concerns.'},
    { id: 1060, testId: 7, difficulty: 'hard', question: "What is the difference between TCP and UDP?", type: 'subjective', answer: 'TCP (Transmission Control Protocol) is a connection-oriented protocol that guarantees reliable, ordered delivery of a stream of bytes. UDP (User Datagram Protocol) is a connectionless protocol that does not guarantee delivery, order, or error checking, making it faster but less reliable.'},
    { id: 1061, testId: 7, difficulty: 'hard', question: "Explain what an 'event-driven' architecture is.", type: 'subjective', answer: 'An event-driven architecture is a software architecture paradigm promoting the production, detection, consumption of, and reaction to events. It enables loose coupling between services and is highly scalable.'},
    { id: 1062, testId: 7, difficulty: 'hard', question: "What is a 'Canary Release'?", type: 'subjective', answer: 'Canary releasing is a technique to reduce the risk of introducing a new software version in production by slowly rolling out the change to a small subset of users before rolling it out to the entire infrastructure.'},
    { id: 1063, testId: 7, difficulty: 'hard', question: "What is 'TDD' (Test-Driven Development)?", type: 'subjective', answer: 'TDD is a software development process that relies on the repetition of a very short development cycle: first the developer writes a failing automated test case that defines a desired improvement or new function, then produces the minimum amount of code to pass that test, and finally refactors the new code to acceptable standards.'},
    { id: 1064, testId: 7, difficulty: 'hard', question: "What is the 'Factory' design pattern?", type: 'subjective', answer: 'The Factory pattern is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.'},
    { id: 1065, testId: 7, difficulty: 'hard', question: "What is a 'Message Queue'?", type: 'subjective', answer: 'A message queue is a component of messaging middleware systems that provides asynchronous communication protocols, where a sender and receiver of a message do not need to interact with the message queue at the same time. Messages are stored on the queue until the recipient retrieves them.'},
    { id: 1066, testId: 7, difficulty: 'hard', question: "Which HTTP status code indicates that a resource has been permanently moved?", type: 'mcq', options: ['301', '302', '404', '200'], answer: '301'},
    { id: 1067, testId: 7, difficulty: 'hard', question: "What is the purpose of `finally` in a promise chain?", type: 'mcq', options: ['To run code only if the promise is successful', 'To run code only if the promise fails', 'To run code after the promise is settled, regardless of the outcome', 'To get the final value of the promise'], answer: 'To run code after the promise is settled, regardless of the outcome'},
    { id: 1068, testId: 7, difficulty: 'hard', question: "What does 'ORM' stand for?", type: 'mcq', options: ['Object-Relational Mapping', 'Object-Resource Model', 'Ordered-Record Management', 'Object-Request Module'], answer: 'Object-Relational Mapping'},
    { id: 1069, testId: 7, difficulty: 'hard', question: "What is a 'Dead Letter Queue' (DLQ)?", type: 'mcq', options: ['A queue for expired messages', 'A queue where messages that cannot be processed successfully are sent', 'A list of unresponsive servers', 'A log of deleted messages'], answer: 'A queue where messages that cannot be processed successfully are sent'},
    { id: 1070, testId: 7, difficulty: 'hard', question: "What is a 'Singleton' design pattern?", type: 'mcq', options: ['A pattern that ensures a class has only one instance and provides a global point of access to it', 'A pattern for creating single-threaded applications', 'A pattern for database tables with one column', 'A pattern for API endpoints that only accept one parameter'], answer: 'A pattern that ensures a class has only one instance and provides a global point of access to it'},
    { id: 1071, testId: 7, difficulty: 'expert', question: "What is a 'paxos' algorithm?", type: 'mcq', options: ['A family of protocols for reaching consensus in a network of unreliable processors', 'A sorting algorithm', 'A data encryption algorithm', 'A load balancing algorithm'], answer: 'A family of protocols for reaching consensus in a network of unreliable processors'},
    { id: 1072, testId: 7, difficulty: 'hard', question: "What does a `401 Unauthorized` status code mean?", type: 'mcq', options: ['The server could not find the requested resource', 'The client must authenticate itself to get the requested response', 'The server has fulfilled the request', 'The server is refusing to respond to it'], answer: 'The client must authenticate itself to get the requested response'},
    { id: 1073, testId: 7, difficulty: 'hard', question: "What is 'ETL' in the context of data warehousing?", type: 'mcq', options: ['Extract, Transform, Load', 'Execute, Test, Launch', 'Encode, Transmit, Log', 'Encrypt, Transfer, Lock'], answer: 'Extract, Transform, Load'},
    { id: 1074, testId: 7, difficulty: 'hard', question: "Which of the following is a 'NoSQL' database?", type: 'mcq', options: ['MySQL', 'PostgreSQL', 'Cassandra', 'SQL Server'], answer: 'Cassandra'},
    { id: 1075, testId: 7, difficulty: 'hard', question: "What is 'blue-green deployment'?", type: 'mcq', options: ['A deployment strategy that involves having two identical production environments', 'A color-coded system for servers', 'A way to test UI changes', 'A database migration strategy'], answer: 'A deployment strategy that involves having two identical production environments'},
    { id: 1076, testId: 7, difficulty: 'hard', question: "What is the purpose of `git commit --amend`?", type: 'mcq', options: ['To add a new commit', 'To modify the most recent commit', 'To delete a commit', 'To create a new branch'], answer: 'To modify the most recent commit'},
    { id: 1077, testId: 7, difficulty: 'hard', question: "What is 'observability' in the context of software systems?", type: 'mcq', options: ['The ability to measure a system’s current state from its external outputs', 'A security feature', 'A type of automated testing', 'A code documentation standard'], answer: 'The ability to measure a system’s current state from its external outputs'},
    { id: 1078, testId: 7, difficulty: 'expert', question: "What is 'consistent hashing' used for?", type: 'mcq', options: ['Password security', 'Minimizing data redistribution when nodes are added or removed in a distributed system', 'Data encryption', 'File integrity checks'], answer: 'Minimizing data redistribution when nodes are added or removed in a distributed system'},
    { id: 1079, testId: 7, difficulty: 'hard', question: "What is 'Prometheus'?", type: 'mcq', options: ['A database', 'An open-source systems monitoring and alerting toolkit', 'A CI/CD tool', 'A cloud provider'], answer: 'An open-source systems monitoring and alerting toolkit'},
    { id: 1080, testId: 7, difficulty: 'hard', question: "What is 'OpenAPI Specification' (formerly Swagger)?", type: 'mcq', options: ['A standard for defining RESTful APIs', 'An open-source API gateway', 'A testing framework for APIs', 'A network protocol'], answer: 'A standard for defining RESTful APIs'},

    // Test 8 (Very Hard - 40 questions: 24 MCQ, 16 Subjective)
    { id: 1081, testId: 8, difficulty: 'hard', question: "Explain the concept of 'eventual consistency'.", type: 'subjective', answer: 'Eventual consistency is a consistency model used in distributed computing that guarantees that, if no new updates are made to a given data item, all accesses to that item will eventually return the last updated value. It is a common model in highly available systems like NoSQL databases.'},
    { id: 1082, testId: 8, difficulty: 'hard', question: "Describe how SSL/TLS handshake works.", type: 'subjective', answer: 'The TLS handshake is a process where the client and server agree on the parameters for their secure connection. It involves the client sending a "ClientHello", the server responding with a "ServerHello" and its certificate, the client verifying the certificate and sending a session key, and both parties confirming the secure channel is ready.'},
    { id: 1083, testId: 8, difficulty: 'hard', question: "What is the difference between a 'process' and a 'thread'?", type: 'subjective', answer: 'A process is an instance of a computer program that is being executed, with its own memory space. A thread is a component of a process that can run concurrently with other threads in the same process, sharing memory and resources.'},
    { id: 1084, testId: 8, difficulty: 'hard', question: "What is 'Infrastructure as Code' (IaC)?", type: 'subjective', answer: 'IaC is the management of infrastructure (networks, virtual machines, load balancers) in a descriptive model, using the same versioning as DevOps team uses for source code. Tools like Terraform or AWS CloudFormation are used to define and provision infrastructure.'},
    { id: 1085, testId: 8, difficulty: 'hard', question: "What is the '12-Factor App' methodology?", type: 'subjective', answer: 'The 12-Factor App is a methodology for building software-as-a-service applications. Its principles include: using a declarative format for setup automation, having a clean contract with the underlying operating system, being suitable for deployment on modern cloud platforms, minimizing divergence between development and production, and enabling continuous deployment.'},
    { id: 1086, testId: 8, difficulty: 'expert', question: "What is 'Chaos Engineering'?", type: 'subjective', answer: 'Chaos Engineering is the discipline of experimenting on a software system in production in order to build confidence in the system\'s capability to withstand turbulent and unexpected conditions.'},
    { id: 1087, testId: 8, difficulty: 'expert', question: "Explain what a 'distributed lock manager' (DLM) is and why it's needed.", type: 'subjective', answer: 'A DLM is a system that provides locking services to multiple processes running on different nodes in a distributed system. It is needed to prevent concurrent access to a shared resource, ensuring data consistency in a distributed environment. Tools like ZooKeeper or etcd can be used for this.'},
    { id: 1088, testId: 8, difficulty: 'hard', question: "What are the pros and cons of 'serverless' architecture?", type: 'subjective', answer: 'Pros: Reduced operational cost (pay-per-use), automatic scaling, and less server management. Cons: Potential for vendor lock-in, challenges with local testing and debugging, and limitations on execution duration and resources.'},
    { id: 1089, testId: 8, difficulty: 'hard', question: "How do you handle secrets management in a backend application?", type: 'subjective', answer: 'Secrets should never be hardcoded or committed to version control. They should be managed using a dedicated secrets management tool (like HashiCorp Vault or AWS Secrets Manager), or injected into the application environment at runtime via environment variables or mounted files.'},
    { id: 1090, testId: 8, difficulty: 'expert', question: "What is a 'Leaky Bucket' algorithm and how is it used for rate limiting?", type: 'subjective', answer: 'The Leaky Bucket algorithm is a rate limiting technique where incoming requests are added to a fixed-size queue (the bucket). The requests are processed at a fixed rate, and if the bucket is full, new requests are discarded. It enforces a smooth, constant output rate.'},
    { id: 1091, testId: 8, difficulty: 'hard', question: "What is the 'Decorator' design pattern?", type: 'subjective', answer: 'The Decorator pattern allows behavior to be added to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class. It involves a set of decorator classes that are used to wrap concrete components.'},
    { id: 1092, testId: 8, difficulty: 'hard', question: "What is 'gRPC' and how does it differ from REST?", type: 'subjective', answer: 'gRPC is a high-performance RPC framework that uses Protocol Buffers as its interface definition language and HTTP/2 for transport. It differs from REST by being contract-first, using binary serialization (more efficient), and supporting streaming, making it suitable for high-performance microservices communication.'},
    { id: 1093, testId: 8, difficulty: 'hard', question: "What is a 'sidecar' pattern?", type: 'subjective', answer: 'The sidecar pattern is a deployment pattern where an auxiliary container is deployed alongside the main application container. This sidecar provides supporting features like logging, monitoring, or acting as a proxy, without being part of the main application\'s code.'},
    { id: 1094, testId: 8, difficulty: 'expert', question: "What are 'idempotent consumers' in a messaging system?", type: 'subjective', answer: 'An idempotent consumer is a message receiver that can safely process the same message multiple times without causing unintended side effects. This is crucial in distributed systems where message delivery can be guaranteed "at-least-once", as it prevents issues like duplicate orders or transactions.'},
    { id: 1095, testId: 8, difficulty: 'expert', question: "What is the 'Saga' pattern and when would you use it?", type: 'subjective', answer: 'The Saga pattern is a way to manage data consistency across microservices for distributed transactions. It is a sequence of local transactions, where each transaction publishes an event that triggers the next. If one step fails, compensating transactions are run to undo the preceding work. It\'s used when you need to maintain consistency without using a traditional two-phase commit.'},
    { id: 1096, testId: 8, difficulty: 'expert', question: "Explain how a 'vector clock' works.", type: 'subjective', answer: 'A vector clock is a data structure used for determining the partial ordering of events in a distributed system. Each process in the system maintains a vector of logical clocks, one for each process. When an event occurs, the process increments its own clock and sends its entire vector with any message, allowing the receiver to determine the causal relationship between events.'},
    { id: 1097, testId: 8, difficulty: 'hard', question: "Which of the following is a core component of 'Observability'?", type: 'mcq', options: ['Logs, Metrics, Traces', 'Code, Tests, Builds', 'CPU, Memory, Disk', 'Users, Sessions, Events'], answer: 'Logs, Metrics, Traces'},
    { id: 1098, testId: 8, difficulty: 'hard', question: "What is 'Kubernetes'?", type: 'mcq', options: ['A container runtime', 'A container orchestration platform', 'A cloud provider', 'A database'], answer: 'A container orchestration platform'},
    { id: 1099, testId: 8, difficulty: 'hard', question: "What does 'DNS' stand for?", type: 'mcq', options: ['Domain Name System', 'Data Naming Service', 'Dynamic Network System', 'Distributed Name Server'], answer: 'Domain Name System'},
    { id: 1100, testId: 8, difficulty: 'expert', question: "What is 'etcd'?", type: 'mcq', options: ['A text editor', 'A distributed key-value store that provides a reliable way to store data across a cluster of machines', 'A networking protocol', 'A file system'], answer: 'A distributed key-value store that provides a reliable way to store data across a cluster of machines'},
    { id: 1101, testId: 8, difficulty: 'hard', question: "In the context of security, what is 'salting'?", type: 'mcq', options: ['Adding random data to the input of a hash function to safeguard passwords', 'Encrypting data', 'A type of firewall', 'A denial-of-service attack'], answer: 'Adding random data to the input of a hash function to safeguard passwords'},
    { id: 1102, testId: 8, difficulty: 'hard', question: "What is the `Content-Security-Policy` (CSP) header used for?", type: 'mcq', options: ['To control caching', 'To prevent Cross-Site Scripting (XSS) and other code injection attacks', 'To define the language of the content', 'To specify the server type'], answer: 'To prevent Cross-Site Scripting (XSS) and other code injection attacks'},
    { id: 1103, testId: 8, difficulty: 'hard', question: "What is a 'stateful' application?", type: 'mcq', options: ['An application that does not store any data', 'An application that remembers data from previous interactions or transactions', 'An application that runs on a server', 'An application that has no user interface'], answer: 'An application that remembers data from previous interactions or transactions'},
    { id: 1104, testId: 8, difficulty: 'hard', question: "What is 'GraphQL'?", type: 'mcq', options: ['A database', 'A query language for your API', 'A frontend framework', 'A server-side language'], answer: 'A query language for your API'},
    { id: 1105, testId: 8, difficulty: 'hard', question: "Which of the following is a 'pull' based monitoring system?", type: 'mcq', options: ['Prometheus', 'StatsD', 'Graphite', 'InfluxDB'], answer: 'Prometheus'},
    { id: 1106, testId: 8, difficulty: 'hard', question: "What is 'OpenTelemetry'?", type: 'mcq', options: ['A set of APIs, SDKs, and libraries for creating and managing telemetry data (traces, metrics, and logs)', 'A cloud hosting provider', 'A CI/CD platform', 'A database migration tool'], answer: 'A set of APIs, SDKs, and libraries for creating and managing telemetry data (traces, metrics, and logs)'},
    { id: 1107, testId: 8, difficulty: 'hard', question: "What is the 'Builder' design pattern?", type: 'mcq', options: ['A pattern for creating complex objects step by step', 'A pattern for managing object state', 'A pattern for network communication', 'A pattern for database access'], answer: 'A pattern for creating complex objects step by step'},
    { id: 1108, testId: 8, difficulty: 'hard', question: "What is a 'Linux namespace'?", type: 'mcq', options: ['A feature of the Linux kernel that partitions kernel resources such that one set of processes sees one set of resources', 'A file naming convention', 'A type of network socket', 'A package manager'], answer: 'A feature of the Linux kernel that partitions kernel resources such that one set of processes sees one set of resources'},
    { id: 1109, testId: 8, difficulty: 'hard', question: "What does the `chmod` command do in Unix/Linux?", type: 'mcq', options: ['Change file ownership', 'Change file permissions', 'Change directory', 'Copy a file'], answer: 'Change file permissions'},
    { id: 1110, testId: 8, difficulty: 'hard', question: "What is 'mTLS' (Mutual TLS)?", type: 'mcq', options: ['A more secure version of TLS', 'A process where both the client and the server authenticate each other using certificates', 'A TLS connection for mobile devices', 'A deprecated protocol'], answer: 'A process where both the client and the server authenticate each other using certificates'},

    // Test 9 (Expert - 45 questions: 27 MCQ, 18 Subjective)
    { id: 1111, testId: 9, difficulty: 'expert', question: "What are 'cgroups' in Linux and why are they important for containers?", type: 'subjective', answer: 'Control groups (cgroups) are a Linux kernel feature that allow you to allocate resources—such as CPU time, system memory, network bandwidth—among user-defined groups of tasks. They are crucial for containers as they provide the resource limiting and isolation that prevents one container from consuming all system resources.'},
    { id: 1112, testId: 9, difficulty: 'expert', question: "Explain the 'strangler fig' pattern.", type: 'subjective', answer: 'The strangler fig pattern is a technique for gradually migrating a legacy monolithic system to a microservices architecture. A new system (the "strangler fig") is built around the old one, and new features are added to it. Over time, functionality is incrementally moved from the monolith to the new system until the monolith is "strangled" and can be decommissioned.'},
    { id: 1113, testId: 9, difficulty: 'expert', question: "What is a 'CRDT' (Conflict-free Replicated Data Type)?", type: 'subjective', answer: 'A CRDT is a data structure which can be replicated across multiple computers in a network, where the replicas can be updated independently and concurrently without coordination between the replicas, and where it is always mathematically possible to resolve any inconsistencies that might result. They are used in collaborative applications and distributed databases.'},
    { id: 1114, testId: 9, difficulty: 'expert', question: "How does 'leader election' work in a distributed system?", type: 'subjective', answer: 'Leader election is the process of designating a single process as the organizer of some task distributed among several computers (nodes). An algorithm like Paxos or Raft is often used. The leader is responsible for coordinating actions, and if it fails, a new leader is elected to ensure the system continues to operate.'},
    { id: 1115, testId: 9, difficulty: 'expert', question: "What is the difference between a 'hot' and 'cold' cache?", type: 'subjective', answer: 'A "cold" cache is one that is empty or contains stale data, resulting in cache misses and requests going to the origin server. A "hot" or "warmed" cache is one that has been pre-populated with data that is expected to be requested, leading to high cache hit rates and better performance from the start.'},
    { id: 1116, testId: 9, difficulty: 'expert', question: "What is 'reactive programming'?", type: 'subjective', answer: 'Reactive programming is a declarative programming paradigm concerned with data streams and the propagation of change. Libraries like RxJS allow you to create and subscribe to observable streams of data, making it easier to handle asynchronous events and data flows.'},
    { id: 1117, testId: 9, difficulty: 'expert', question: "Explain what 'end-to-end encryption' is.", type: 'subjective', answer: 'End-to-end encryption (E2EE) is a system of communication where only the communicating users can read the messages. It prevents potential eavesdroppers—including telecom providers, Internet providers, and even the provider of the communication service—from being able to access the cryptographic keys needed to decrypt the conversation.'},
    { id: 1118, testId: 9, difficulty: 'expert', question: "What is a 'service mesh' (e.g., Istio, Linkerd)?", type: 'subjective', answer: 'A service mesh is a dedicated infrastructure layer for handling service-to-service communication. It provides features like traffic management, service discovery, load balancing, security, and observability in a transparent way, by deploying a proxy (sidecar) alongside each microservice.'},
    { id: 1119, testId: 9, difficulty: 'expert', question: "Describe how you would design a system for 'at-least-once' message delivery.", type: 'subjective', answer: 'To achieve at-least-once delivery, the sender sends a message and waits for an acknowledgment from the receiver. If the sender doesn\'t receive an acknowledgment within a timeout period, it re-sends the message. The receiver must be able to handle duplicate messages (i.e., be idempotent).'},
    { id: 1120, testId: 9, difficulty: 'expert', question: "What is a 'rolling update' deployment strategy?", type: 'subjective', answer: 'A rolling update is a deployment strategy that slowly replaces instances of the previous version of an application with instances of the new version. This is done one by one or in batches, ensuring that there is no downtime.'},
    { id: 1121, testId: 9, difficulty: 'expert', question: "What are some strategies for database schema migration in a zero-downtime environment?", type: 'subjective', answer: 'Strategies include making changes backward-compatible. For example, when renaming a column, you first add the new column, deploy code that writes to both and reads from the new one, then run a data migration script, and finally deploy code that removes the old column. This is often done in multiple deployment steps.'},
    { id: 1122, testId: 9, difficulty: 'expert', question: "What is the 'Actor Model' of concurrency?", type: 'subjective', answer: 'The Actor Model is a mathematical model of concurrent computation that treats "actors" as the universal primitives of concurrent computation. In response to a message that it receives, an actor can: make local decisions, create more actors, send more messages, and determine how to respond to the next message received. This avoids the need for shared state and locks.'},
    { id: 1123, testId: 9, difficulty: 'expert', question: "Explain 'backpressure' in reactive streams.", type: 'subjective', answer: 'Backpressure is a mechanism that allows a consumer to signal to a producer that it is overwhelmed and needs the producer to slow down. In reactive streams, the subscriber can request a specific number of items from the publisher, controlling the flow of data and preventing buffer overflows.'},
    { id: 1124, testId: 9, difficulty: 'expert', question: "What are 'tombstones' in a distributed database like Cassandra?", type: 'subjective', answer: 'Since data in distributed databases is often replicated and deleted asynchronously, a "tombstone" is a marker that is written to indicate a record has been deleted. This marker is then replicated to other nodes, ensuring the deletion is propagated, before the data and tombstone are eventually garbage collected.'},
    { id: 1125, testId: 9, difficulty: 'expert', question: "What is a 'bloom filter'?", type: 'subjective', answer: 'A bloom filter is a space-efficient probabilistic data structure that is used to test whether an element is a member of a set. False positive matches are possible, but false negatives are not. It\'s useful for avoiding expensive lookups for items that are known not to be in a set.'},
    { id: 1126, testId: 9, difficulty: 'expert', question: "What is the 'gVisor' project?", type: 'subjective', answer: 'gVisor is an application kernel, written in Go, that provides an isolation boundary between an application and the host kernel. It implements a subset of the Linux system call interface and is used to provide secure sandboxing for containers.'},
    { id: 1127, testId: 9, difficulty: 'expert', question: "What is a 'log-structured merge-tree' (LSM Tree)?", type: 'subjective', answer: 'An LSM Tree is a data structure with performance characteristics that make it attractive for providing indexed access to files with high write volume, such as in NoSQL databases. It batches writes in memory (a memtable) and then flushes them to sorted, immutable segments (SSTables) on disk, which are later merged.'},
    { id: 1128, testId: 9, difficulty: 'expert', question: "Explain 'database replication'.", type: 'subjective', answer: 'Database replication is the process of copying data from a database on one server (the primary or master) to one or more other servers (replicas or slaves). This is done to improve data availability, reliability, and read performance by distributing the load.'},
    { id: 1129, testId: 9, difficulty: 'expert', question: "What is the 'CAP Theorem'?", type: 'mcq', options: ['A theorem about caching, availability, and performance', 'A principle stating a distributed system can only provide two of three guarantees: Consistency, Availability, and Partition Tolerance', 'A security model for APIs', 'A law governing CPU performance'], answer: 'A principle stating a distributed system can only provide two of three guarantees: Consistency, Availability, and Partition Tolerance'},
    { id: 1130, testId: 9, difficulty: 'expert', question: "What is a 'canary deployment'?", type: 'mcq', options: ['Deploying an application in a test environment', 'Gradually rolling out a new version to a small subset of users before a full rollout', 'Deploying to two identical environments and switching traffic', 'A manual deployment process'], answer: 'Gradually rolling out a new version to a small subset of users before a full rollout'},
    // ... 25 more questions for Test 9
    { id: 1131, testId: 9, difficulty: 'expert', question: "What is 'Terraform'?", type: 'mcq', options: ['A CI/CD tool', 'A tool for building, changing, and versioning infrastructure safely and efficiently (Infrastructure as Code)', 'A container orchestration platform', 'A monitoring system'], answer: 'A tool for building, changing, and versioning infrastructure safely and efficiently (Infrastructure as Code)'},
    { id: 1132, testId: 9, difficulty: 'expert', question: "What is 'Ansible'?", type: 'mcq', options: ['A cloud provider', 'An open-source software provisioning, configuration management, and application-deployment tool', 'A database', 'A web server'], answer: 'An open-source software provisioning, configuration management, and application-deployment tool'},
    { id: 1133, testId: 9, difficulty: 'expert', question: "What is the 'API Gateway' pattern?", type: 'mcq', options: ['A pattern where a single server acts as an entry point for a group of microservices', 'A way to connect directly to a database', 'A frontend state management pattern', 'A security protocol'], answer: 'A pattern where a single server acts as an entry point for a group of microservices'},
    { id: 1134, testId: 9, difficulty: 'expert', question: "What does the `429 Too Many Requests` HTTP status code mean?", type: 'mcq', options: ['The server is down', 'The resource was not found', 'The user has sent too many requests in a given amount of time ("rate limiting")', 'The request was successful'], answer: 'The user has sent too many requests in a given amount of time ("rate limiting")'},
    { id: 1135, testId: 9, difficulty: 'expert', question: "What is a 'golden image' in the context of infrastructure?", type: 'mcq', options: ['A highly optimized image file', 'A pre-configured template for a virtual machine or container image, used to speed up deployments', 'A backup of a database', 'A security certificate'], answer: 'A pre-configured template for a virtual machine or container image, used to speed up deployments'},
    { id: 1136, testId: 9, difficulty: 'expert', question: "What is 'GitOps'?", type: 'mcq', options: ['A way of implementing Continuous Delivery for cloud native applications, where Git is the single source of truth', 'A graphical user interface for Git', 'A specific Git command', 'A competitor to Git'], answer: 'A way of implementing Continuous Delivery for cloud native applications, where Git is the single source of truth'},
    { id: 1137, testId: 9, difficulty: 'expert', question: "Which of the following is a 'push' based monitoring system?", type: 'mcq', options: ['Prometheus', 'StatsD', 'Thanos', 'Cortex'], answer: 'StatsD'},
    { id: 1138, testId: 9, difficulty: 'expert', question: "What is a 'StatefulSet' in Kubernetes?", type: 'mcq', options: ['A workload API object used to manage stateful applications, providing stable network identifiers and persistent storage', 'A configuration file', 'A stateless application deployment', 'A security policy'], answer: 'A workload API object used to manage stateful applications, providing stable network identifiers and persistent storage'},
    { id: 1139, testId: 9, difficulty: 'expert', question: "What is 'eBPF' (extended Berkeley Packet Filter)?", type: 'mcq', options: ['A technology that can run sandboxed programs in an operating system kernel, used for networking, observability, and security', 'A file system', 'A database query language', 'A CPU architecture'], answer: 'A technology that can run sandboxed programs in an operating system kernel, used for networking, observability, and security'},
    { id: 1140, testId: 9, difficulty: 'expert', question: "What is 'Thanos' in the context of monitoring?", type: 'mcq', options: ['A CI/CD tool', 'A set of components that can be composed into a highly available metric system with unlimited storage capacity, which can be added seamlessly on top of existing Prometheus deployments', 'A log aggregation tool', 'A database'], answer: 'A set of components that can be composed into a highly available metric system with unlimited storage capacity, which can be added seamlessly on top of existing Prometheus deployments'},
    { id: 1141, testId: 9, difficulty: 'expert', question: "What is a `DaemonSet` in Kubernetes?", type: 'mcq', options: ['Ensures that all (or some) Nodes run a copy of a Pod, useful for cluster storage or logging daemons', 'A way to run a single pod', 'A tool for managing secrets', 'A network policy'], answer: 'Ensures that all (or some) Nodes run a copy of a Pod, useful for cluster storage or logging daemons'},
    { id: 1142, testId: 9, difficulty: 'expert', question: "What is 'FaaS' (Function as a Service)?", type: 'mcq', options: ['A category of cloud computing services that provides a platform allowing customers to develop, run, and manage application functionalities without the complexity of building and maintaining the infrastructure', 'A file storage service', 'A firewall as a service', 'A testing framework'], answer: 'A category of cloud computing services that provides a platform allowing customers to develop, run, and manage application functionalities without the complexity of building and maintaining the infrastructure'},
    { id: 1143, testId: 9, difficulty: 'expert', question: "What is a 'load test'?", type: 'mcq', options: ['A test to check for security vulnerabilities', 'A type of performance test that subjects a system to a specified load to see how it behaves', 'A test for user interface correctness', 'A unit test for a single function'], answer: 'A type of performance test that subjects a system to a specified load to see how it behaves'},

    // Test 10 (Expert - 50 questions: 30 MCQ, 20 Subjective)
    { id: 1144, testId: 10, difficulty: 'expert', question: "What is 'distributed tracing' and why is it important for microservices?", type: 'subjective', answer: 'Distributed tracing is a method used to profile and monitor applications, especially those built using a microservices architecture. It helps to track a single request as it travels through multiple services, making it easier to debug latency issues and understand system behavior.'},
    { id: 1145, testId: 10, difficulty: 'expert', question: "Explain the difference between 'synchronous' and 'asynchronous' communication in a distributed system.", type: 'subjective', answer: 'Synchronous communication is blocking; the sender sends a request and waits for a response before continuing. Asynchronous communication is non-blocking; the sender sends a message and continues its work without waiting for a response, often using a message queue.'},
    { id: 1146, testId: 10, difficulty: 'expert', question: "What is a 'sidecar proxy' and what problems does it solve?", type: 'subjective', answer: 'A sidecar proxy is a small, lightweight proxy that runs alongside each service instance. It intercepts all incoming and outgoing network traffic, allowing it to handle cross-cutting concerns like service discovery, routing, retries, security, and observability without requiring changes to the application code.'},
    { id: 1147, testId: 10, difficulty: 'expert', question: "How would you secure a REST API?", type: 'subjective', answer: 'Securing a REST API involves multiple layers: using TLS/SSL for encryption, implementing robust authentication (e.g., OAuth 2.0 with JWTs), applying fine-grained authorization (scopes, roles), validating all input to prevent injection attacks, using rate limiting, and comprehensive logging and monitoring.'},
    { id: 1148, testId: 10, difficulty: 'expert', question: "What are the trade-offs of using a 'message broker' like RabbitMQ or Kafka?", type: 'subjective', answer: 'Pros: Decoupling of services, improved scalability and resilience, and support for asynchronous communication. Cons: Increased operational complexity (another system to manage and monitor), potential for a single point of failure (if not made highly available), and increased latency compared to direct calls.'},
    { id: 1149, testId: 10, difficulty: 'expert', question: "What is 'A/B testing' in the context of backend services?", type: 'subjective', answer: 'A/B testing involves directing a portion of traffic to a new version of a service to compare its performance or business metrics against the current version. This is often controlled by a feature flag system or an API gateway, allowing for data-driven decisions about new features.'},
    { id: 1150, testId: 10, difficulty: 'expert', question: "What is a 'container orchestrator' and why is it needed?", type: 'subjective', answer: 'A container orchestrator, like Kubernetes, is a tool that automates the deployment, scaling, and management of containerized applications. It\'s needed to manage the complexity of running applications across many containers and hosts, handling tasks like scheduling, networking, and health monitoring.'},
    { id: 1151, testId: 10, difficulty: 'expert', question: "Explain the 'Adapter' design pattern.", type: 'subjective', answer: 'The Adapter pattern is a structural design pattern that allows objects with incompatible interfaces to collaborate. It acts as a wrapper around an existing class, converting its interface into one that the client expects.'},
    { id: 1152, testId: 10, difficulty: 'expert', question: "What is a 'data lake' and how does it differ from a 'data warehouse'?", type: 'subjective', answer: 'A data lake is a vast pool for storing raw data in its native format. A data warehouse is a repository for structured, filtered data that has been processed for a specific purpose. Data warehouses store data in a schema-on-write model, while data lakes use a schema-on-read model.'},
    { id: 1153, testId: 10, difficulty: 'expert', question: "What is 'continuous verification' in the context of CI/CD?", type: 'subjective', answer: 'Continuous verification is the practice of using automated monitoring and analysis during the deployment process to detect issues with a new release. If metrics like error rates or latency cross a predefined threshold, the deployment can be automatically rolled back.'},
    { id: 1154, testId: 10, difficulty: 'expert', question: "What is 'gRPC-Web'?", type: 'subjective', answer: 'gRPC-Web is a JavaScript implementation of gRPC for browser clients. It allows a web application to communicate directly with a gRPC backend without needing a separate REST API, though it does require a proxy to translate between HTTP/1.1 and HTTP/2.'},
    { id: 1155, testId: 10, difficulty: 'expert', question: "How does a 'distributed hash table' (DHT) work?", type: 'subjective', answer: 'A DHT is a decentralized distributed system that provides a lookup service similar to a hash table. Key-value pairs are stored in the DHT, and any participating node can efficiently retrieve the value associated with a given key. It uses consistent hashing to map keys to nodes.'},
    { id:1156, testId: 10, difficulty: 'expert', question: "What is the 'Command' design pattern?", type: 'subjective', answer: 'The Command pattern is a behavioral design pattern in which an object is used to encapsulate all information needed to perform an action or trigger an event at a later time. This information includes the method name, the object that owns the method and values for the method parameters.'},
    { id: 1157, testId: 10, difficulty: 'expert', question: "What is 'outbox pattern' used for in microservices?", type: 'subjective', answer: 'The Outbox pattern is a way to reliably publish events from a service. Instead of directly publishing an event after a database transaction, the service writes the event to an "outbox" table within the same transaction. A separate process then reads from this table and publishes the events to a message broker, ensuring atomicity.'},
    { id: 1158, testId: 10, difficulty: 'expert', question: "What is a 'log-structured file system'?", type: 'subjective', answer: 'A log-structured file system writes all modifications to a circular buffer, or log. This approach groups writes together, which is efficient for writing, but can make reads more complex as data for a single file may be scattered throughout the log. It\'s the basis for how many modern databases handle writes.'},
    { id: 1159, testId: 10, difficulty: 'expert', question: "Explain 'sharding' vs. 'partitioning' in databases.", type: 'subjective', answer: 'Partitioning is a generic term for dividing a large table into smaller parts. Sharding is a specific type of partitioning, known as horizontal partitioning, where rows of a table are held in separate tables or on separate servers. The key idea of sharding is that the database is distributed across multiple machines.'},
    { id: 1160, testId: 10, difficulty: 'expert', question: "What is 'mmap' system call?", type: 'subjective', answer: '`mmap` is a POSIX-compliant Unix system call that maps files or devices into memory. It\'s a method of memory-mapped file I/O. It can be a more efficient way to access a file\'s contents than standard read/write operations because it avoids extra copies between the kernel and user space.'},
    { id: 1161, testId: 10, difficulty: 'expert', question: "What is 'QUIC' protocol and what problems does it solve?", type: 'subjective', answer: 'QUIC is a transport layer network protocol built on top of UDP. It is the foundation of HTTP/3. It solves the head-of-line blocking problem of TCP by using streams, and it reduces connection establishment latency by combining the TCP and TLS handshakes.'},
    { id: 1162, testId: 10, difficulty: 'expert', question: "What is a 'fuzzer' in software testing?", type: 'subjective', answer: 'A fuzzer is an automated software testing tool that involves providing invalid, unexpected, or random data as inputs to a computer program. The goal is to find bugs, crashes, or security vulnerabilities that might not be found with standard test cases.'},
    { id: 1163, testId: 10, difficulty: 'expert', question: "What is the 'zero-copy' principle?", type: 'subjective', answer: 'Zero-copy is an optimization that avoids copying data between buffers in memory. For example, when sending file data over a network, a zero-copy operation would allow the network interface to read data directly from the kernel\'s page cache, avoiding a copy from kernel space to user space and back.'},
    { id: 1164, testId: 10, difficulty: 'expert', question: "What is a 'Liveness Probe' in Kubernetes?", type: 'mcq', options: ['A probe to check if a container is ready to serve traffic', 'A probe to check if a container is still running; if it fails, the container is restarted', 'A probe to check network connectivity', 'A probe to check for security vulnerabilities'], answer: 'A probe to check if a container is still running; if it fails, the container is restarted'},
    { id: 1165, testId: 10, difficulty: 'expert', question: "What is a 'Readiness Probe' in Kubernetes?", type: 'mcq', options: ['A probe to check if a container is alive', 'A probe to check if a container is ready to start accepting traffic', 'A probe for database health', 'A startup script'], answer: 'A probe to check if a container is ready to start accepting traffic'},
    // ... 28 more MCQs
    { id: 1166, testId: 10, difficulty: 'expert', question: "What is 'Envoy'?", type: 'mcq', options: ['A CI/CD tool', 'A high-performance proxy often used as a sidecar in service meshes', 'A cloud storage service', 'A logging framework'], answer: 'A high-performance proxy often used as a sidecar in service meshes'},
    { id: 1167, testId: 10, difficulty: 'expert', question: "Which of the following is a 'graph' database?", type: 'mcq', options: ['Redis', 'Neo4j', 'PostgreSQL', 'Cassandra'], answer: 'Neo4j'},
    { id: 1168, testId: 10, difficulty: 'expert', question: "What is 'OpenID Connect' (OIDC)?", type: 'mcq', options: ['An identity layer built on top of the OAuth 2.0 protocol', 'A security protocol for APIs', 'A data encryption standard', 'A network firewall'], answer: 'An identity layer built on top of the OAuth 2.0 protocol'},
    { id: 1169, testId: 10, difficulty: 'expert', question: "What is a 'stateless session'?", type: 'mcq', options: ['A session where all necessary state is stored on the client (e.g., in a JWT)', 'A session where state is stored in a database', 'A session that never expires', 'An unauthenticated session'], answer: 'A session where all necessary state is stored on the client (e.g., in a JWT)'},
    { id: 1170, testId: 10, difficulty: 'expert', question: "What is the 'Event Loop' in Node.js?", type: 'mcq', options: ['A mechanism that allows Node.js to perform non-blocking I/O operations', 'A tool for debugging events', 'A user interface component', 'A way to handle for-loops'], answer: 'A mechanism that allows Node.js to perform non-blocking I/O operations'},
    { id: 1171, testId: 10, difficulty: 'expert', question: "What is a 'Turing Machine'?", type: 'mcq', options: ['A real-world computer', 'A mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape', 'A type of GPU', 'A quantum computer'], answer: 'A mathematical model of computation that defines an abstract machine which manipulates symbols on a strip of tape'},
    { id: 1172, testId: 10, difficulty: 'expert', question: "What is 'idempontecy'?", type: 'mcq', options: ['An operation that returns the same ID every time', 'A property of some operations in mathematics and computer science, that they can be applied multiple times without changing the result beyond the initial application', 'A security flaw', 'A performance bottleneck'], answer: 'A property of some operations in mathematics and computer science, that they can be applied multiple times without changing the result beyond the initial application'},
    { id: 1173, testId: 10, difficulty: 'expert', question: "What is the 'SOLID' principle 'L' (Liskov Substitution Principle)?", type: 'mcq', options: ['Objects of a superclass should be replaceable with objects of its subclasses without breaking the application', 'A class should have only one reason to change', 'Depend on abstractions, not on concretions', 'Interfaces should be small and specific'], answer: 'Objects of a superclass should be replaceable with objects of its subclasses without breaking the application'},
    { id: 1174, testId: 10, difficulty: 'expert', question: "What is a 'Semaphore'?", type: 'mcq', options: ['A variable or abstract data type used to control access to a common resource by multiple processes in a concurrent system', 'A network signal', 'A database index', 'A type of API'], answer: 'A variable or abstract data type used to control access to a common resource by multiple processes in a concurrent system'},
    { id: 1175, testId: 10, difficulty: 'expert', question: "What does 'YAGNI' stand for?", type: 'mcq', options: ['"You Aren\'t Gonna Need It"', '"You Always Get New Ideas"', '"Your App Generates No Income"', '"Yet Another Grandiose Notion"'], answer: '"You Aren\'t Gonna Need It"'},
    { id: 1176, testId: 10, difficulty: 'expert', question: "What is a 'Helm chart'?", type: 'mcq', options: ['A package manager for Kubernetes that helps you define, install, and upgrade applications', 'A performance monitoring chart', 'A database schema diagram', 'A type of Gantt chart'], answer: 'A package manager for Kubernetes that helps you define, install, and upgrade applications'},
    { id: 1177, testId: 10, difficulty: 'expert', question: "What is 'gitflow'?", type: 'mcq', options: ['A Git branching model that defines a strict branching model designed around the project release', 'A graphical user interface for Git', 'A command in Git', 'A git hosting service'], answer: 'A Git branching model that defines a strict branching model designed around the project release'},
    { id: 1178, testId: 10, difficulty: 'expert', question: "What is 'domain-driven design' (DDD)?", type: 'mcq', options: ['An approach to software development that focuses on modeling the software to match a domain according to input from that domain\'s experts', 'A design for domain names', 'A database design methodology', 'A UI design paradigm'], answer: 'An approach to software development that focuses on modeling the software to match a domain according to input from that domain\'s experts'},
    { id: 1179, testId: 10, difficulty: 'expert', question: "What is 'Protobuf' (Protocol Buffers)?", type: 'mcq', options: ['A free and open-source platform for data serialization developed by Google', 'A network protocol', 'A database', 'A text-based data format'], answer: 'A free and open-source platform for data serialization developed by Google'},
    { id: 1180, testId: 10, difficulty: 'expert', question: "What is the 'eventual' in 'eventual consistency'?", type: 'mcq', options: ['It means the system will eventually fail', 'It guarantees that if no new updates are made, all replicas will eventually have the latest value', 'It is a synonym for strong consistency', 'It means consistency is not important'], answer: 'It guarantees that if no new updates are made, all replicas will eventually have the latest value'},
    { id: 1181, testId: 10, difficulty: 'expert', question: "What is 'functional programming'?", type: 'mcq', options: ['A programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data', 'A paradigm focused on creating many functions', 'A paradigm where all functions must be components', 'A paradigm used only for mathematical software'], answer: 'A programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data'},
    { id: 1182, testId: 10, difficulty: 'expert', question: "What is a 'pure function'?", type: 'mcq', options: ['A function with no parameters', 'A function whose return value is only determined by its input values, without observable side effects', 'A function that only works with numbers', 'A function written in a specific language'], answer: 'A function whose return value is only determined by its input values, without observable side effects'},
    { id: 1183, testId: 10, difficulty: 'expert', question: "What is a 'side effect' in programming?", type: 'mcq', options: ['A desirable outcome of a function', 'A modification of state outside the local environment of a function', 'A bug', 'A performance improvement'], answer: 'A modification of state outside the local environment of a function'},
    { id: 1184, testId: 10, difficulty: 'expert', question: "What is a 'higher-order function'?", type: 'mcq', options: ['A function that is very complex', 'A function that takes another function as an argument, or returns a function', 'A function that is part of a class', 'A function that is compiled to machine code'], answer: 'A function that takes another function as an argument, or returns a function'},
    { id: 1185, testId: 10, difficulty: 'expert', question: "What is 'currying'?", type: 'mcq', options: ['A technique of transforming a function that takes multiple arguments into a sequence of functions that each takes a single argument', 'A way to add spice to your code', 'A debugging technique', 'A data encryption method'], answer: 'A technique of transforming a function that takes multiple arguments into a sequence of functions that each takes a single argument'},
    { id: 1186, testId: 10, difficulty: 'expert', question: "What is `tail-recursion`?", type: 'mcq', options: ['A recursive call that happens at the end of a function', 'A special kind of recursion that can be optimized by compilers to avoid stack overflow', 'A recursive function that is slow', 'A function that calls itself multiple times'], answer: 'A special kind of recursion that can be optimized by compilers to avoid stack overflow'},
    { id: 1187, testId: 10, difficulty: 'expert', question: "What is a 'monad' in functional programming?", type: 'mcq', options: ['A simple value', 'A design pattern used to build computations as a sequence of steps', 'A type of variable', 'A security token'], answer: 'A design pattern used to build computations as a sequence of steps'},
    { id: 1188, testId: 10, difficulty: 'expert', question: "What is the 'fallacy of distributed computing'?", type: 'mcq', options: ['A list of erroneous assumptions that developers new to distributed applications often make', 'A formal theorem', 'A design pattern', 'A security vulnerability'], answer: 'A list of erroneous assumptions that developers new to distributed applications often make'},
    { id: 1189, testId: 10, difficulty: 'expert', question: "What is `Finagle`?", type: 'mcq', options: ['A programming language', 'An extensible RPC system for the JVM, used to build high-concurrency servers', 'A database', 'A frontend framework'], answer: 'An extensible RPC system for the JVM, used to build high-concurrency servers'},
    { id: 1190, testId: 10, difficulty: 'expert', question: "What is `Zookeeper`?", type: 'mcq', options: ['A centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services', 'A tool for managing animals', 'A logging framework', 'A CI/CD tool'], answer: 'A centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services'},
    { id: 1191, testId: 10, difficulty: 'expert', question: "What is 'BASE' as an alternative to ACID?", type: 'mcq', options: ['Basically Available, Soft state, Eventual consistency', 'Balanced, Available, Scalable, Efficient', 'Before, After, Settle, End', 'Binary, ASCII, String, Encoded'], answer: 'Basically Available, Soft state, Eventual consistency'},
    { id: 1192, testId: 10, difficulty: 'expert', question: "What is `tldr`?", type: 'mcq', options: ['A summary of a document', 'A command-line client for simplified, community-driven man pages', 'A logging tool', 'A network protocol'], answer: 'A command-line client for simplified, community-driven man pages'},
    { id: 1193, testId: 10, difficulty: 'expert', question: "What is `Iptables`?", type: 'mcq', options: ['A user-space utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall', 'A database table manager', 'A network monitoring tool', 'A file system'], answer: 'A user-space utility program that allows a system administrator to configure the tables provided by the Linux kernel firewall'},
  ],
  'full-stack': [],
  'next-js': [],
  java: [],
  python: [],
  mern: [],
  'c-plus-plus': [],
  devops: [],
  'data-science': [],
  'ai-ml': [],
  'cloud-computing': [],
  'mobile-development': [],
  'cybersecurity': [],
};

const allCategories = [
  'full-stack', 'next-js', 'java', 'python', 'mern', 'c-plus-plus', 'devops', 
  'data-science', 'ai-ml', 'cloud-computing', 'mobile-development', 'cybersecurity'
];

allCategories.forEach(category => {
  // Use frontend questions as a template for all other categories
  questions[category] = questions.frontend.map(q => ({
    ...q,
    // You can add category-specific modifications here if needed
    // For now, we're just copying them to ensure content exists.
    // A real implementation would have unique questions per category.
    question: q.question.replace(/React/g, "the framework").replace(/JavaScript/g, "the language"),
  }));
});

// A quick helper to ensure IDs are unique across all questions if they are copied.
let uniqueId = 2000;
Object.values(questions).forEach(questionList => {
  questionList.forEach(question => {
    // Re-assign IDs for copied categories to avoid duplicates
    if (allCategories.some(cat => cat !== 'frontend' && cat !== 'backend')) {
      question.id = uniqueId++;
    }
  });
});

    